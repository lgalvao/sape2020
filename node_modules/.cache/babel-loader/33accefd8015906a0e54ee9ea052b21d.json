{"remainingRequest":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js!D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoConfiguracao.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoConfiguracao.vue","mtime":1540482998192},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\sape2020\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as tipos from \"../store/mutationtypes\";\nimport Navegacao from \"../componentes/Navegacao\";\nimport { mapMutations, mapState, mapActions } from 'vuex';\nexport default {\n  name: \"VisaoConfiguracao\",\n  components: {\n    Navegacao: Navegacao\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.atualizarVisao(to.name);\n      vm.atualizarPolling();\n    });\n  },\n  computed: _objectSpread({\n    url: {\n      get: function get() {\n        return this._url;\n      },\n      set: function set(valor) {\n        this.atualizarUrl(valor);\n      }\n    },\n    ativarNotificacoes: {\n      get: function get() {\n        return this._ativarNotificacoes;\n      },\n      set: function set(valor) {\n        this.atualizarAtivarNotificacoes(valor);\n      }\n    },\n    alternarEtapas: {\n      get: function get() {\n        return this._alternarEtapas;\n      },\n      set: function set(valor) {\n        if (valor === true) {\n          this.atualizarModoTelao(false);\n        }\n\n        this.atualizarAlternarEtapas(valor);\n      }\n    },\n    modoTelao: {\n      get: function get() {\n        return this._modoTelao;\n      },\n      set: function set(valor) {\n        if (valor === true) {\n          this.atualizarAlternarEtapas(false);\n        }\n\n        this.atualizarModoTelao(valor);\n      }\n    },\n    testeAndamentos: {\n      get: function get() {\n        return this._testeAndamentos;\n      },\n      set: function set(valor) {\n        this.atualizarTesteAndamentos(valor);\n        this.atualizarPolling();\n      }\n    }\n  }, mapState({\n    _url: function _url(state) {\n      return state.url;\n    },\n    _ativarNotificacoes: function _ativarNotificacoes(state) {\n      return state.ativarNotificacoes;\n    },\n    _alternarEtapas: function _alternarEtapas(state) {\n      return state.alternarEtapas;\n    },\n    _modoTelao: function _modoTelao(state) {\n      return state.modoTelao;\n    },\n    _testeAndamentos: function _testeAndamentos(state) {\n      return state.testeAndamentos;\n    }\n  })),\n  methods: _objectSpread({}, mapActions(['atualizarPolling']), {}, mapMutations({\n    atualizarVisao: tipos.ATUALIZAR_VISAO,\n    atualizarModoTelao: tipos.ATUALIZAR_MODO_TELAO,\n    atualizarAlternarEtapas: tipos.ATUALIZAR_ALTERNAR_ETAPAS,\n    atualizarAtivarNotificacoes: tipos.ATIVAR_NOTIFICACOES,\n    atualizarUrl: tipos.ATUALIZAR_URL,\n    atualizarTesteAndamentos: tipos.ATUALIZAR_TESTE_ANDAMENTOS\n  }))\n};",{"version":3,"sources":["VisaoConfiguracao.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,OAAA,KAAA,KAAA;AACA,OAAA,SAAA;AACA,SAAA,YAAA,EAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAFA;AAKA,EAAA,gBALA,4BAKA,EALA,EAKA,IALA,EAKA,IALA,EAKA;AACA,IAAA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,IAAA;AACA,MAAA,EAAA,CAAA,gBAAA;AACA,KAHA,CAAA;AAIA,GAVA;AAWA,EAAA,QAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,IAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,YAAA,CAAA,KAAA;AACA;AANA,KADA;AASA,IAAA,kBAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,mBAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,2BAAA,CAAA,KAAA;AACA;AANA,KATA;AAiBA,IAAA,cAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,eAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,YAAA,KAAA,KAAA,IAAA,EAAA;AACA,eAAA,kBAAA,CAAA,KAAA;AACA;;AACA,aAAA,uBAAA,CAAA,KAAA;AACA;AATA,KAjBA;AA4BA,IAAA,SAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,UAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,YAAA,KAAA,KAAA,IAAA,EAAA;AACA,eAAA,uBAAA,CAAA,KAAA;AACA;;AACA,aAAA,kBAAA,CAAA,KAAA;AACA;AATA,KA5BA;AAuCA,IAAA,eAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,gBAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,wBAAA,CAAA,KAAA;AACA,aAAA,gBAAA;AACA;AAPA;AAvCA,KAgDA,QAAA,CAAA;AACA,IAAA,IAAA,EAAA,cAAA,KAAA;AAAA,aAAA,KAAA,CAAA,GAAA;AAAA,KADA;AAEA,IAAA,mBAAA,EAAA,6BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,kBAAA;AAAA,KAFA;AAGA,IAAA,eAAA,EAAA,yBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,cAAA;AAAA,KAHA;AAIA,IAAA,UAAA,EAAA,oBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,SAAA;AAAA,KAJA;AAKA,IAAA,gBAAA,EAAA,0BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,eAAA;AAAA;AALA,GAAA,CAhDA,CAXA;AAmEA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,kBADA,CAAA,CADA,MAIA,YAAA,CAAA;AACA,IAAA,cAAA,EAAA,KAAA,CAAA,eADA;AAEA,IAAA,kBAAA,EAAA,KAAA,CAAA,oBAFA;AAGA,IAAA,uBAAA,EAAA,KAAA,CAAA,yBAHA;AAIA,IAAA,2BAAA,EAAA,KAAA,CAAA,mBAJA;AAKA,IAAA,YAAA,EAAA,KAAA,CAAA,aALA;AAMA,IAAA,wBAAA,EAAA,KAAA,CAAA;AANA,GAAA,CAJA;AAnEA,CAAA","sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row align-v=\"start\">\r\n      <navegacao titulo-geral=\"Configurações\"/>\r\n    </b-row>\r\n\r\n    <b-row style=\"font-size: large\">\r\n      <b-col\r\n          cols=\"12\"\r\n          md=\"7\">\r\n        <b-form>\r\n          <b-list-group>\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbTelao\"\r\n                  v-model=\"modoTelao\">\r\n                Modo telão\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbAlternar\"\r\n                  v-model=\"alternarEtapas\">\r\n                Alternar geração/preparação\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbNotificacao\"\r\n                  v-model=\"ativarNotificacoes\">\r\n                Ativar notificações (beta!)\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbTesteAndamentos\"\r\n                  v-model=\"testeAndamentos\">\r\n                Teste de andamentos (usado pela equipe de dev)\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              URL do servidor (usado pela equipe de dev):\r\n              <b-form-input\r\n                  id=\"urlServidor\"\r\n                  v-model=\"url\"\r\n                  placeholder=\"Endereço do servidor\"\r\n                  style=\"width:50%\">\r\n              </b-form-input>\r\n            </b-list-group-item>\r\n\r\n          </b-list-group>\r\n        </b-form>\r\n      </b-col>\r\n\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from '../store/mutationtypes'\r\n    import Navegacao from '../componentes/Navegacao'\r\n    import {mapMutations, mapState, mapActions} from 'vuex'\r\n\r\n    export default {\r\n        name: \"VisaoConfiguracao\",\r\n        components: {\r\n            Navegacao\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name);\r\n                vm.atualizarPolling();\r\n            })\r\n        },\r\n        computed: {\r\n            url: {\r\n                get() {\r\n                    return this._url\r\n                },\r\n                set(valor) {\r\n                    this.atualizarUrl(valor)\r\n                }\r\n            },\r\n            ativarNotificacoes: {\r\n                get() {\r\n                    return this._ativarNotificacoes\r\n                },\r\n                set(valor) {\r\n                    this.atualizarAtivarNotificacoes(valor)\r\n                }\r\n            },\r\n            alternarEtapas: {\r\n                get() {\r\n                    return this._alternarEtapas\r\n                },\r\n                set(valor) {\r\n                    if (valor === true) {\r\n                        this.atualizarModoTelao(false)\r\n                    }\r\n                    this.atualizarAlternarEtapas(valor)\r\n                }\r\n            },\r\n            modoTelao: {\r\n                get() {\r\n                    return this._modoTelao\r\n                },\r\n                set(valor) {\r\n                    if (valor === true) {\r\n                        this.atualizarAlternarEtapas(false)\r\n                    }\r\n                    this.atualizarModoTelao(valor)\r\n                }\r\n            },\r\n            testeAndamentos: {\r\n                get() {\r\n                    return this._testeAndamentos\r\n                },\r\n                set(valor) {\r\n                    this.atualizarTesteAndamentos(valor)\r\n                    this.atualizarPolling()\r\n                }\r\n            },\r\n            ...mapState({\r\n                _url: state => state.url,\r\n                _ativarNotificacoes: state => state.ativarNotificacoes,\r\n                _alternarEtapas: state => state.alternarEtapas,\r\n                _modoTelao: state => state.modoTelao,\r\n                _testeAndamentos: state => state.testeAndamentos\r\n            })\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                    atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                    atualizarModoTelao: tipos.ATUALIZAR_MODO_TELAO,\r\n                    atualizarAlternarEtapas: tipos.ATUALIZAR_ALTERNAR_ETAPAS,\r\n                    atualizarAtivarNotificacoes: tipos.ATIVAR_NOTIFICACOES,\r\n                    atualizarUrl: tipos.ATUALIZAR_URL,\r\n                    atualizarTesteAndamentos: tipos.ATUALIZAR_TESTE_ANDAMENTOS\r\n                }\r\n            )\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views"}]}