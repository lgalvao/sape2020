{"remainingRequest":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js!D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\App.vue","mtime":1582134345167},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\sape2020\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from 'vuex';\nexport default {\n  name: 'aplicacao',\n  computed: _objectSpread({}, mapState({\n    etapa: function etapa(state) {\n      return state.etapa;\n    }\n  })),\n  mounted: function mounted() {\n    this.obterEleicao();\n    this.atualizarEtapaRest(this.etapa);\n    this.atualizarPolling();\n  },\n  methods: _objectSpread({}, mapActions(['obterEleicao', 'atualizarEtapaRest', 'atualizarPolling']))\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAOA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AADA,GAAA,CADA,CAFA;AAOA,EAAA,OAPA,qBAOA;AACA,SAAA,YAAA;AACA,SAAA,kBAAA,CAAA,KAAA,KAAA;AACA,SAAA,gBAAA;AACA,GAXA;AAYA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,cADA,EAEA,oBAFA,EAGA,kBAHA,CAAA,CADA;AAZA,CAAA","sourcesContent":["<template>\r\n    <div id=\"aplicacao\" :key=\"20181028-1\">\r\n        <router-view/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {mapActions, mapState} from 'vuex'\r\n\r\n    export default {\r\n        name: 'aplicacao',\r\n        computed: {\r\n            ...mapState({\r\n                etapa: state => state.etapa\r\n            })\r\n        },\r\n        mounted() {\r\n            this.obterEleicao();\r\n            this.atualizarEtapaRest(this.etapa);\r\n            this.atualizarPolling()\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'obterEleicao',\r\n                'atualizarEtapaRest',\r\n                'atualizarPolling'\r\n            ])\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    @font-face {\r\n        font-family: \"Roboto\";\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        src: url(\"assets/fontes/Roboto-Regular.ttf\");\r\n    }\r\n\r\n    @font-face {\r\n        font-family: \"Roboto Condensed\";\r\n        font-style: normal;\r\n        font-weight: 300;\r\n        src: url(\"assets/fontes/RobotoCondensed-Regular.ttf\");\r\n    }\r\n\r\n    @font-face {\r\n        font-family: \"Roboto Condensed Bold\";\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        src: url(\"assets/fontes/RobotoCondensed-Bold.ttf\");\r\n    }\r\n</style>\r\n\r\n<style scoped>\r\n    #aplicacao {\r\n        font-family: \"Roboto Condensed\", sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n</style>"],"sourceRoot":"src"}]}