{"remainingRequest":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js!D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoConferencia.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoConferencia.vue","mtime":1540663696772},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"D:\\\\sape2020\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as tipos from \"../store/mutationtypes\";\nimport { mapActions, mapGetters, mapMutations, mapState } from 'vuex';\nimport Navegacao from \"../componentes/Navegacao\";\nimport Legenda from \"../componentes/Legenda\";\nimport VisaoZonasItem from \"../componentes/VisaoZonasItem\";\nimport VisaoZonasModal from \"../componentes/VisaoZonasModal\";\nimport lodash from 'lodash';\n\nvar moment = require('moment');\n\nmoment.locale('pt-BR');\nexport default {\n  name: \"VisaoConferencia\",\n  components: {\n    Navegacao: Navegacao,\n    VisaoZonasItem: VisaoZonasItem,\n    VisaoZonasModal: VisaoZonasModal,\n    Legenda: Legenda\n  },\n  data: function data() {\n    return {\n      filtroConferente: '',\n      esconderConcluidas: false,\n      zonaSelecionada: '1',\n      alturaMinima: '200px'\n    };\n  },\n  updated: function updated() {\n    var alturaTabela, alturaLista, alturaLegenda;\n\n    if (this.$refs.tabela && this.$refs.zonas) {\n      alturaTabela = this.$refs.tabela.clientHeight;\n      alturaLista = this.$refs.zonas.clientHeight;\n      alturaLegenda = this.$refs.legenda.clientHeight;\n    }\n\n    if (alturaTabela || alturaLista || alturaLegenda) this.alturaMinima = Math.max(alturaTabela, alturaLista) + 'px';\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.atualizarVisao(to.name);\n      vm.atualizarPoloSelecionado(0);\n      vm.atualizarPolling();\n    });\n  },\n  computed: _objectSpread({}, mapState({\n    etapa: function etapa(state) {\n      return state.etapa;\n    },\n    zonas: function zonas(state) {\n      return state.zonas;\n    },\n    polos: function polos(state) {\n      return state.polos;\n    },\n    fila: function fila(state) {\n      return state.fila;\n    }\n  }), {}, mapGetters({\n    andamentos: 'getAndamentos'\n  }), {\n    campos: function campos() {\n      var _this = this;\n\n      var saida = {\n        zona: {\n          label: 'Zona',\n          formatter: function formatter(value) {\n            return _this.numZonaFormatado(value);\n          }\n        },\n        polo: {},\n        dtAptaConferencia: {\n          label: 'Apta Conf.',\n          formatter: function formatter(value) {\n            if (value) return value.replace('/2018', '');else return '';\n          }\n        },\n        tempoEspera: {\n          label: 'Espera',\n          formatter: function formatter(value) {\n            return _this.duracao(value);\n          }\n        },\n        conferente: {\n          label: 'Conferente'\n        },\n        dtConferenciaIniciada: {\n          label: 'Conf. inÃ­cio',\n          formatter: function formatter(value) {\n            if (value) return value.replace('/2018', '');else return '';\n          }\n        },\n        dtConferenciaFinalizada: {\n          label: 'Conf. final',\n          formatter: function formatter(value) {\n            if (value) return value.replace('/2018', '');else return '';\n          }\n        },\n        tempoConferencia: {\n          label: 'Tmp conf',\n          formatter: function formatter(value) {\n            return _this.duracao(value);\n          }\n        },\n        ata: {\n          label: 'Ata'\n        }\n      };\n\n      if (this.etapa == 2) {\n        delete saida.dtAptaConferencia;\n        delete saida.tempoEspera;\n      }\n\n      return saida;\n    },\n    filtrados: function filtrados() {\n      var _this2 = this;\n\n      var retorno = [];\n      var fila = this.fila;\n\n      if (!this.filtroConferente && !this.esconderConcluidas) {\n        retorno = fila;\n      }\n\n      if (this.filtroConferente) {\n        if (this.esconderConcluidas) {\n          retorno = fila.filter(function (item) {\n            return !item.conferente || !item.dtConferenciaFinalizada && item.conferente && item.conferente.indexOf(_this2.filtroConferente) > -1;\n          });\n        } else {\n          retorno = fila.filter(function (item) {\n            return !item.conferente || item.conferente && item.conferente.indexOf(_this2.filtroConferente) > -1;\n          });\n        }\n      } else if (!this.filtroConferente) {\n        if (this.esconderConcluidas) {\n          retorno = fila.filter(function (item) {\n            return !item.conferente || !item.dtConferenciaFinalizada;\n          });\n        } else {\n          retorno = fila;\n        }\n      }\n\n      return retorno;\n    },\n    iniciadas: function iniciadas() {\n      return this.zonasOrdenado.filter(function (z) {\n        return z.andamento > 1;\n      }).length;\n    },\n    mediaConferencia: function mediaConferencia() {\n      if (this.fila.length == 0) return 0;else return this.duracao(Math.floor(lodash.meanBy(this.fila, function (itemFila) {\n        return itemFila.tempoConferencia;\n      })));\n    },\n    mediaEspera: function mediaEspera() {\n      if (this.fila.length == 0) return 0;else return this.duracao(Math.floor(lodash.meanBy(this.fila, function (itemFila) {\n        return itemFila.tempoEspera;\n      })));\n    },\n    zonasOrdenado: function zonasOrdenado() {\n      var _this3 = this;\n\n      var saida = [];\n\n      var _loop = function _loop(i) {\n        var numZona = _this3.fila[i].zona;\n        saida[i] = _this3.zonasArray.find(function (z) {\n          return z.numero === numZona;\n        });\n      };\n\n      for (var i = 0; i < this.fila.length; i++) {\n        _loop(i);\n      }\n\n      var _loop2 = function _loop2(_i) {\n        if (!saida.find(function (z) {\n          return z.numero === _this3.zonasArray[_i].numero;\n        })) {\n          saida.push(_this3.zonasArray[_i]);\n        }\n      };\n\n      for (var _i = 0; _i < this.zonasArray.length; _i++) {\n        _loop2(_i);\n      }\n\n      return lodash.orderBy(saida.filter(function (z) {\n        return _this3.mostrarZona(z.numero);\n      }), ['situacaoVerificacao', 'andamento', 'pendencias.length', 'percRealizado', 'numero'], ['asc', 'asc', 'desc', 'asc', 'asc']);\n    },\n    zonasArray: function zonasArray() {\n      return Object.values(this.zonas);\n    },\n    percentualLiberadas: function percentualLiberadas() {\n      if (this.zonasOrdenado.length == 0) return \"\";\n      return \"(\" + (this.liberadas / this.zonasOrdenado.length * 100).toFixed() + \"%)\";\n    },\n    titulo: function titulo() {\n      return this.zonaSelecionada + \" - \" + this.zonas[this.zonaSelecionada].municipioSede;\n    },\n    liberadas: function liberadas() {\n      var liberadas = 0;\n      var andamentoMaximo = this.andamentos[this.andamentos.length - 1].numero;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.zonasOrdenado[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var zona = _step.value;\n\n          if (zona.andamento === andamentoMaximo) {\n            liberadas++;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return liberadas;\n    },\n    itensRestantes: function itensRestantes() {\n      var itensRestantes = 0;\n\n      for (var zona in this.zonas) {\n        itensRestantes += this.zonas[zona].itensRestantes;\n      }\n\n      return itensRestantes;\n    },\n    itensTotais: function itensTotais() {\n      var itensTotais = 0;\n\n      for (var zona in this.zonas) {\n        itensTotais += this.zonas[zona].itensTotais;\n      }\n\n      return itensTotais;\n    }\n  }),\n  methods: _objectSpread({}, mapActions(['atualizarPolling']), {}, mapMutations({\n    atualizarVisao: tipos.ATUALIZAR_VISAO,\n    atualizarPoloSelecionado: tipos.ATUALIZAR_POLO_SELECIONADO,\n    mostrarModal: tipos.MOSTRAR_MODAL_ZONA\n  }), {\n    mostrarDetalhes: function mostrarDetalhes(numZona) {\n      this.mostrarModal(true);\n      this.zonaSelecionada = numZona;\n    },\n    mostrarZona: function mostrarZona(numZona) {\n      return this.zonas[numZona].andamento >= 3;\n    },\n    infoAta: function infoAta(numZona) {\n      if (this.tempoDecorrido(this.zonas[numZona].dataGeracaoAta)) {\n        if (this.zonas[numZona].situacaoAta.includes('desatualizada')) return this.zonas[numZona].situacaoAta;else return this.zonas[numZona].situacaoAta + \" \" + this.tempoDecorrido(this.zonas[numZona].dataGeracaoAta);\n      } else return this.zonas[numZona].situacaoAta;\n    },\n    tempoDecorrido: function tempoDecorrido(data) {\n      if (!data) return '';\n      return moment(data, \"DD/MM/YYYY HH:mm:ss\").fromNow();\n    },\n    duracao: function duracao(valor) {\n      if (valor === undefined) return '';\n      if (valor === 0) return '';\n      var horas = Math.floor(valor / 3600);\n      var minutos = Math.floor(valor / 60) - horas * 60;\n      var segundos = valor % 60;\n      var retorno = '';\n\n      if (minutos == 0) {\n        retorno = '00:' + (segundos < 10 ? '0' + segundos : segundos);\n      } else if (horas == 0) retorno = (minutos < 10 ? '0' + minutos : minutos) + ':' + (segundos < 10 ? '0' + segundos : segundos);else retorno = (horas < 10 ? '0' + horas : horas) + ':' + (minutos < 10 ? '0' + minutos : minutos) + ':' + (segundos < 10 ? '0' + segundos : segundos);\n\n      return retorno;\n    },\n    numZonaFormatado: function numZonaFormatado(numZona) {\n      var s = \"000\" + numZona;\n      return s.substr(s.length - 3);\n    },\n    numPoloFormatado: function numPoloFormatado(numPolo) {\n      var s = \"00\" + numPolo;\n      return s.substr(s.length - 2);\n    }\n  })\n};",{"version":3,"sources":["VisaoConferencia.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row align-v=\"start\">\r\n      <navegacao/>\r\n    </b-row>\r\n\r\n    <b-row align-v=\"start\" :style=\"{height: alturaMinima}\">\r\n      <b-col cols=\"6\">\r\n        <b-row style=\"font-size:calc(8px + 0.5vmax); background: rgb(45, 139, 0); height:50px\">\r\n          <b-col class=\"mt-2 mb-2 ml-2\">\r\n            <b-form-input size=\"sm\" placeholder=\"Conferente\"\r\n                          v-model=\"filtroConferente\"></b-form-input>\r\n          </b-col>\r\n          <b-col class=\"m-2\">\r\n            <b-form-checkbox size=\"sm\" v-model=\"esconderConcluidas\"\r\n                             style=\"color:white\">Esconder concluÃ­das\r\n            </b-form-checkbox>\r\n          </b-col>\r\n        </b-row>\r\n\r\n        <b-row align-v=\"start\" ref=\"tabela\">\r\n          <b-table id=\"tabela-conferencia\" class=\"ml-3\"\r\n                   show-empty striped hover small bordered\r\n                   empty-text=\"NÃ£o hÃ¡ dados atendendo aos filtros\"\r\n                   empty-filtered-text=\"NÃ£o hÃ¡ dados atendendo aos filtros\"\r\n                   :items=\"filtrados\"\r\n                   :fields=\"campos\"\r\n                   stacked=\"sm\">\r\n\r\n            <template slot=\"ata\" slot-scope=\"data\">\r\n              {{ infoAta(data.item.zona).replace('Ata', '') }}\r\n            </template>\r\n\r\n            <template slot=\"polo\" slot-scope=\"data\">\r\n              <div style=\"text-align: center\">{{ numPoloFormatado(zonas[data.item.zona].numPolo)}}</div>\r\n            </template>\r\n\r\n          </b-table>\r\n        </b-row>\r\n      </b-col>\r\n\r\n      <b-col cols=\"6\">\r\n        <b-row align-v=\"center\" id=\"faixa-informacoes\">\r\n          {{iniciadas}} iniciada{{iniciadas > 1 ? 's' : ''}} â¢\r\n          {{liberadas}}/122 liberada{{liberadas > 1 ? 's' : ''}} ({{Math.floor(liberadas/122*100)}}%)\r\n          <!--{{this.percentualLiberadas}} â¢ MÃ©dia conf. etapa: {{this.mediaConferencia}}-->\r\n          <!--{{this.etapa !== 2 ? 'â¢ MÃ©dia espera etapa: ' + this.mediaEspera : ''}}-->\r\n        </b-row>\r\n\r\n        <b-row id=\"lista-zonas\" ref=\"zonas\">\r\n          <visao-zonas-item\r\n              v-for=\"zona in zonasOrdenado\"\r\n              :key=\"zona.numero\"\r\n              :zona=\"zona\"\r\n              @zona-clicada=\"mostrarDetalhes(zona.numero)\"/>\r\n        </b-row>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row id=\"legenda\" align-v=\"end\" ref=\"legenda\">\r\n      <legenda esconderCopyright=\"true\"/>\r\n    </b-row>\r\n\r\n    <visao-zonas-modal\r\n        :zona=\"this.zonas[this.zonaSelecionada]\">\r\n    </visao-zonas-modal>\r\n\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from \"../store/mutationtypes\"\r\n    import {mapActions, mapGetters, mapMutations, mapState} from 'vuex'\r\n\r\n    import Navegacao from '../componentes/Navegacao'\r\n    import Legenda from '../componentes/Legenda'\r\n\r\n    import VisaoZonasItem from '../componentes/VisaoZonasItem'\r\n    import VisaoZonasModal from '../componentes/VisaoZonasModal'\r\n\r\n    import lodash from 'lodash'\r\n\r\n    const moment = require('moment');\r\n    moment.locale('pt-BR');\r\n\r\n    export default {\r\n        name: \"VisaoConferencia\",\r\n        components: {\r\n            Navegacao,\r\n            VisaoZonasItem,\r\n            VisaoZonasModal,\r\n            Legenda\r\n        },\r\n        data() {\r\n            return {\r\n                filtroConferente: '',\r\n                esconderConcluidas: false,\r\n                zonaSelecionada: '1',\r\n                alturaMinima: '200px'\r\n            }\r\n        },\r\n        updated() {\r\n            let alturaTabela, alturaLista, alturaLegenda\r\n            if (this.$refs.tabela && this.$refs.zonas) {\r\n                alturaTabela = this.$refs.tabela.clientHeight;\r\n                alturaLista = this.$refs.zonas.clientHeight;\r\n                alturaLegenda = this.$refs.legenda.clientHeight\r\n            }\r\n            if (alturaTabela || alturaLista || alturaLegenda)\r\n                this.alturaMinima = Math.max(alturaTabela, alturaLista) + 'px';\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name)\r\n                vm.atualizarPoloSelecionado(0)\r\n                vm.atualizarPolling()\r\n            })\r\n        },\r\n        computed: {\r\n            ...mapState({\r\n                etapa: state => state.etapa,\r\n                zonas: state => state.zonas,\r\n                polos: state => state.polos,\r\n                fila: state => state.fila\r\n            }),\r\n            ...mapGetters({\r\n                andamentos: 'getAndamentos',\r\n            }),\r\n            campos() {\r\n                const saida = {\r\n                    zona: {\r\n                        label: 'Zona',\r\n                        formatter: (value) => {\r\n                            return this.numZonaFormatado(value)\r\n                        }\r\n                    },\r\n                    polo: {},\r\n                    dtAptaConferencia: {\r\n                        label: 'Apta Conf.',\r\n                        formatter: (value) => {\r\n                            if (value) return value.replace('/2018', '')\r\n                            else return ''\r\n                        }\r\n                    },\r\n                    tempoEspera: {\r\n                        label: 'Espera',\r\n                        formatter: (value) => {\r\n                            return this.duracao(value)\r\n                        }\r\n                    },\r\n                    conferente: {label: 'Conferente'},\r\n                    dtConferenciaIniciada: {\r\n                        label: 'Conf. inÃ­cio', formatter: (value) => {\r\n                            if (value) return value.replace('/2018', '')\r\n                            else return ''\r\n                        }\r\n                    },\r\n                    dtConferenciaFinalizada: {\r\n                        label: 'Conf. final', formatter: (value) => {\r\n                            if (value) return value.replace('/2018', '')\r\n                            else return ''\r\n                        }\r\n                    },\r\n                    tempoConferencia: {\r\n                        label: 'Tmp conf',\r\n                        formatter: (value) => {\r\n                            return this.duracao(value)\r\n                        }\r\n                    },\r\n                    ata: {\r\n                        label: 'Ata'\r\n                    }\r\n\r\n                }\r\n                if (this.etapa == 2) {\r\n                    delete saida.dtAptaConferencia\r\n                    delete saida.tempoEspera\r\n                }\r\n                return saida\r\n            },\r\n            filtrados() {\r\n                let retorno = []\r\n                const fila = this.fila\r\n                if (!this.filtroConferente && !this.esconderConcluidas) {\r\n                    retorno = fila\r\n                }\r\n                if (this.filtroConferente) {\r\n                    if (this.esconderConcluidas) {\r\n                        retorno = fila.filter(\r\n                            item => !item.conferente ||\r\n                                (!item.dtConferenciaFinalizada &&\r\n                                    (item.conferente && item.conferente.indexOf(this.filtroConferente) > -1)\r\n                                )\r\n                        )\r\n                    }\r\n                    else {\r\n                        retorno = fila.filter(item => !item.conferente ||\r\n                            (item.conferente && item.conferente.indexOf(this.filtroConferente) > -1))\r\n                    }\r\n                }\r\n                else if (!this.filtroConferente) {\r\n                    if (this.esconderConcluidas) {\r\n                        retorno = fila.filter(item => !item.conferente || (!item.dtConferenciaFinalizada))\r\n                    }\r\n                    else {\r\n                        retorno = fila\r\n                    }\r\n                }\r\n                return retorno\r\n            },\r\n            iniciadas() {\r\n                return this.zonasOrdenado.filter(z => z.andamento > 1).length\r\n            },\r\n            mediaConferencia() {\r\n                if (this.fila.length == 0) return 0\r\n                else return this.duracao(Math.floor(lodash.meanBy(this.fila, itemFila => itemFila.tempoConferencia)))\r\n            },\r\n            mediaEspera() {\r\n                if (this.fila.length == 0) return 0\r\n                else return this.duracao(Math.floor(lodash.meanBy(this.fila, itemFila => itemFila.tempoEspera)))\r\n            },\r\n            zonasOrdenado() {\r\n                let saida = []\r\n\r\n                for (let i = 0; i < this.fila.length; i++) {\r\n                    const numZona = this.fila[i].zona\r\n                    saida[i] = this.zonasArray.find(z => (z.numero === numZona))\r\n                }\r\n                for (let i = 0; i < this.zonasArray.length; i++) {\r\n                    if (!saida.find(z => z.numero === this.zonasArray[i].numero)) {\r\n                        saida.push(this.zonasArray[i])\r\n                    }\r\n                }\r\n                return lodash.orderBy(saida.filter(z => this.mostrarZona(z.numero)),\r\n                    ['situacaoVerificacao', 'andamento', 'pendencias.length', 'percRealizado', 'numero'], ['asc', 'asc', 'desc', 'asc', 'asc'])\r\n            },\r\n            zonasArray() {\r\n                return Object.values(this.zonas)\r\n            },\r\n            percentualLiberadas() {\r\n                if (this.zonasOrdenado.length == 0) return \"\"\r\n                return \"(\" + (this.liberadas / this.zonasOrdenado.length * 100).toFixed() + \"%)\"\r\n            },\r\n            titulo() {\r\n                return this.zonaSelecionada + \" - \" +\r\n                    this.zonas[this.zonaSelecionada].municipioSede;\r\n            },\r\n            liberadas() {\r\n                let liberadas = 0;\r\n                const andamentoMaximo = this.andamentos[this.andamentos.length - 1].numero\r\n                for (let zona of this.zonasOrdenado) {\r\n                    if (zona.andamento === andamentoMaximo) {\r\n                        liberadas++\r\n                    }\r\n                }\r\n                return liberadas\r\n            },\r\n            itensRestantes() {\r\n                let itensRestantes = 0;\r\n                for (let zona in this.zonas) {\r\n                    itensRestantes += this.zonas[zona].itensRestantes\r\n                }\r\n                return itensRestantes\r\n            },\r\n            itensTotais() {\r\n                let itensTotais = 0;\r\n                for (let zona in this.zonas) {\r\n                    itensTotais += this.zonas[zona].itensTotais\r\n                }\r\n                return itensTotais\r\n            },\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                atualizarPoloSelecionado: tipos.ATUALIZAR_POLO_SELECIONADO,\r\n                mostrarModal: tipos.MOSTRAR_MODAL_ZONA\r\n            }),\r\n            mostrarDetalhes(numZona) {\r\n                this.mostrarModal(true);\r\n                this.zonaSelecionada = numZona\r\n            },\r\n            mostrarZona(numZona) {\r\n                return (this.zonas[numZona].andamento >= 3)\r\n            },\r\n            infoAta(numZona) {\r\n                if (this.tempoDecorrido(this.zonas[numZona].dataGeracaoAta)) {\r\n                    if (this.zonas[numZona].situacaoAta.includes('desatualizada'))\r\n                        return this.zonas[numZona].situacaoAta\r\n                    else\r\n                        return this.zonas[numZona].situacaoAta + \" \"\r\n                            + this.tempoDecorrido(this.zonas[numZona].dataGeracaoAta)\r\n                }\r\n                else\r\n                    return this.zonas[numZona].situacaoAta\r\n            },\r\n            tempoDecorrido(data) {\r\n                if (!data) return ''\r\n                return moment(data, \"DD/MM/YYYY HH:mm:ss\").fromNow();\r\n            },\r\n            duracao(valor) {\r\n                if (valor === undefined) return ''\r\n                if (valor === 0) return ''\r\n\r\n                let horas = Math.floor(valor / 3600)\r\n                let minutos = Math.floor(valor / 60) - horas * 60\r\n                let segundos = valor % 60\r\n\r\n                let retorno = ''\r\n                if (minutos == 0) {\r\n                    retorno = '00:' + (segundos < 10 ? '0' + segundos : segundos)\r\n                }\r\n                else if (horas == 0)\r\n                    retorno = (minutos < 10 ? '0' + minutos : minutos) + ':'\r\n                        + (segundos < 10 ? '0' + segundos : segundos)\r\n                else\r\n                    retorno = (horas < 10 ? '0' + horas : horas) + ':'\r\n                        + (minutos < 10 ? '0' + minutos : minutos) + ':'\r\n                        + (segundos < 10 ? '0' + segundos : segundos)\r\n\r\n                return retorno\r\n            },\r\n            numZonaFormatado(numZona) {\r\n                const s = \"000\" + numZona;\r\n                return s.substr(s.length - 3);\r\n            },\r\n            numPoloFormatado(numPolo) {\r\n                const s = \"00\" + numPolo;\r\n                return s.substr(s.length - 2);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n  #tabela-conferencia {\r\n    font-size: calc(6px + 0.4vmax);\r\n    margin-bottom: 80px\r\n  }\r\n\r\n  #lista-zonas {\r\n    padding-top: 1vmin;\r\n    padding-left: 0.6vmax;\r\n    height: 100%\r\n  }\r\n\r\n  #faixa-informacoes {\r\n    background-color: rgb(45, 139, 0);\r\n    font-size: calc(7px + 1.1vmin);\r\n    color: white;\r\n    padding-left: 0.8vmax;\r\n    height: 50px\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/views"}]}