{"remainingRequest":"D:\\sape2020\\node_modules\\thread-loader\\dist\\cjs.js!D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js!D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoMunicipios.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoMunicipios.vue","mtime":1582222179507},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkQ6XFxzYXBlMjAyMFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIHRpcG9zIGZyb20gJy4uL3N0b3JlL211dGF0aW9udHlwZXMnOwppbXBvcnQgeyBtYXBBY3Rpb25zLCBtYXBHZXR0ZXJzLCBtYXBNdXRhdGlvbnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBMIGZyb20gJ2xlYWZsZXQnOwppbXBvcnQgTmF2ZWdhY2FvIGZyb20gJy4uL2NvbXBvbmVudGVzL05hdmVnYWNhbyc7CmltcG9ydCBMZWdlbmRhIGZyb20gJy4uL2NvbXBvbmVudGVzL0xlZ2VuZGEnOwppbXBvcnQgbWFwYSBmcm9tICcuLi9hc3NldHMvZ2VvL21hcGFtdW5pY2lwaW9zLmpzJzsKaW1wb3J0IG1hcGFub3JkZXN0ZSBmcm9tICcuLi9hc3NldHMvZ2VvL25vcmRlc3RlLmpzJzsKaW1wb3J0IFZpc2FvTXVuaWNpcGlvc01vZGFsIGZyb20gJy4uL2NvbXBvbmVudGVzL01vZGFsTXVuaWNpcGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVmlzYW9NdW5pY2lwaW9zJywKICBjb21wb25lbnRzOiB7CiAgICBWaXNhb011bmljaXBpb3NNb2RhbDogVmlzYW9NdW5pY2lwaW9zTW9kYWwsCiAgICBMZWdlbmRhOiBMZWdlbmRhLAogICAgTmF2ZWdhY2FvOiBOYXZlZ2FjYW8KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtdW5pY2lwaW9TZWxlY2lvbmFkbzogJzI2MDAwNTQnLAogICAgICBtYXBhOiBudWxsLAogICAgICBjYW1hZGFHZW86IG51bGwsCiAgICAgIGNhbWFkYUZ1bmRvOiBudWxsLAogICAgICBjYW1hZGFGdW5kbzI6IG51bGwsCiAgICAgIGluZm86IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoewogICAgbXVuaWNpcGlvczogZnVuY3Rpb24gbXVuaWNpcGlvcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUubXVuaWNpcGlvczsKICAgIH0sCiAgICBldGFwYTogZnVuY3Rpb24gZXRhcGEoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmV0YXBhOwogICAgfQogIH0pLCB7fSwgbWFwR2V0dGVycyh7CiAgICBhbmRhbWVudG9zOiAnZ2V0QW5kYW1lbnRvcycsCiAgICBjb3JNdW5pY2lwaW86ICdnZXRDb3JNdW5pY2lwaW8nLAogICAgYW5kYW1lbnRvc0V0YXBhOiAnZ2V0QW5kYW1lbnRvc0V0YXBhTXVuaWNpcGlvcycKICB9KSksCiAgd2F0Y2g6IHsKICAgIGFuZGFtZW50b3NFdGFwYTogZnVuY3Rpb24gYW5kYW1lbnRvc0V0YXBhKCkgewogICAgICB0aGlzLmF0dWFsaXphck1hcGEoKTsKICAgIH0KICB9LAogIGJlZm9yZVJvdXRlRW50ZXI6IGZ1bmN0aW9uIGJlZm9yZVJvdXRlRW50ZXIodG8sIGZyb20sIG5leHQpIHsKICAgIG5leHQoZnVuY3Rpb24gKHZtKSB7CiAgICAgIHZtLmF0dWFsaXphclZpc2FvKHRvLm5hbWUpOwogICAgICB2bS5hdHVhbGl6YXJQb2xsaW5nKCk7CiAgICAgIHZtLmF0dWFsaXphck1hcGEoKTsKICAgIH0pOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBvcGNvZXNNYXBhID0gewogICAgICB6b29tQ29udHJvbDogZmFsc2UsCiAgICAgIGF0dHJpYnV0aW9uQ29udHJvbDogZmFsc2UsCiAgICAgIGRyYWdnaW5nOiBmYWxzZSwKICAgICAgem9vbVNuYXA6IDAuMSwKICAgICAgem9vbURlbHRhOiAwLjEKICAgIH07CgogICAgaWYgKHRoaXMubWFwYSA9PT0gbnVsbCB8fCB0aGlzLm1hcGEgPT09IHVuZGVmaW5lZCkgewogICAgICB0aGlzLm1hcGEgPSBMLm1hcCgnbWFwYS1tdW5pY2lwaW9zJywgb3Bjb2VzTWFwYSk7CiAgICB9CgogICAgaWYgKHRoaXMuY2FtYWRhRnVuZG8gPT0gbnVsbCkgewogICAgICB0aGlzLmNhbWFkYUZ1bmRvID0gTC50aWxlTGF5ZXIoJ2h0dHBzOi8vYXBpLnRpbGVzLm1hcGJveC5jb20vdjQve2lkfS97en0ve3h9L3t5fS5wbmc/YWNjZXNzX3Rva2VuPXthY2Nlc3NUb2tlbn0nLCB7CiAgICAgICAgaWQ6ICdtYXBib3gubGlnaHQnLAogICAgICAgIGFjY2Vzc1Rva2VuOiAncGsuZXlKMUlqb2liR1Z2Ym1GeVpHOW5ZV3gyWVc4aUxDSmhJam9pWTJwc2RqRmtZbWRpTUhFeWRUTnZielkwYzNScGNXVmlkeUo5LlQtQ1FZS3hNaUhpUHdzNzluQWpFVGcnCiAgICAgIH0pLmFkZFRvKHRoaXMubWFwYSk7CiAgICB9CgogICAgaWYgKHRoaXMuY2FtYWRhRnVuZG8yID09IG51bGwpIHsKICAgICAgdGhpcy5jYW1hZGFGdW5kbzIgPSBMLmdlb0pTT04obWFwYW5vcmRlc3RlLCB7CiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgIGZpbGxDb2xvcjogJ3doaXRlJywKICAgICAgICAgIGNvbG9yOiAnZGFya2dyYXknLAogICAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgfQogICAgICB9KS5hZGRUbyh0aGlzLm1hcGEpOwogICAgfQoKICAgIGlmICh0aGlzLmNhbWFkYUdlbyA9PSBudWxsKSB7CiAgICAgIHRoaXMuY2FtYWRhR2VvID0gTC5nZW9KU09OKG1hcGEsIHsKICAgICAgICBzdHlsZTogdGhpcy5lc3RpbG8sCiAgICAgICAgb25FYWNoRmVhdHVyZTogdGhpcy5hdHVhbGl6YXJFbGVtZW50b3MKICAgICAgfSkuYWRkVG8odGhpcy5tYXBhKTsKICAgIH0KCiAgICB2YXIgYm91bmRzID0gdGhpcy5jYW1hZGFHZW8uZ2V0Qm91bmRzKCk7CiAgICB2YXIgem9vbSA9IHRoaXMubWFwYS5nZXRCb3VuZHNab29tKGJvdW5kcyk7CiAgICB0aGlzLm1hcGEuc2V0Wm9vbSh6b29tIC0gMC4yKTsKICAgIHRoaXMubWFwYS5zZXRNaW5ab29tKHpvb20pOwogICAgdGhpcy5tYXBhLnNldE1heFpvb20oem9vbSk7CiAgICB0aGlzLm1hcGEuZml0Qm91bmRzKGJvdW5kcyk7CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKFsnYXR1YWxpemFyUG9sbGluZyddKSwge30sIG1hcE11dGF0aW9ucyh7CiAgICBhdHVhbGl6YXJWaXNhbzogdGlwb3MuQVRVQUxJWkFSX1ZJU0FPLAogICAgbW9zdHJhck1vZGFsOiB0aXBvcy5NT1NUUkFSX01PREFMX01VTklDSVBJTwogIH0pLCB7CiAgICBhdHVhbGl6YXJNYXBhOiBmdW5jdGlvbiBhdHVhbGl6YXJNYXBhKCkgewogICAgICB0aGlzLmNhbWFkYUdlby5yZW1vdmUoKTsKICAgICAgdGhpcy5jYW1hZGFHZW8gPSBMLmdlb0pTT04obWFwYSwgewogICAgICAgIHN0eWxlOiB0aGlzLmVzdGlsbywKICAgICAgICBvbkVhY2hGZWF0dXJlOiB0aGlzLmF0dWFsaXphckVsZW1lbnRvcwogICAgICB9KS5hZGRUbyh0aGlzLm1hcGEpOwogICAgICBjb25zb2xlLmxvZygnTWFwYSBhdHVhbGl6YWRvJyk7CiAgICB9LAogICAgbW9zdHJhckRldGFsaGVzOiBmdW5jdGlvbiBtb3N0cmFyRGV0YWxoZXMoZSkgewogICAgICB0aGlzLm11bmljaXBpb1NlbGVjaW9uYWRvID0gZS50YXJnZXQuZmVhdHVyZS5wcm9wZXJ0aWVzLkNPRElCR0U7CiAgICAgIHRoaXMubW9zdHJhck1vZGFsKHRydWUpOwogICAgfSwKICAgIG9idGVyQ29yOiBmdW5jdGlvbiBvYnRlckNvcihjb2RJYmdlKSB7CiAgICAgIHJldHVybiB0aGlzLmNvck11bmljaXBpbyhjb2RJYmdlKSB8fCAnZ3JleSc7CiAgICB9LAogICAgZXN0aWxvOiBmdW5jdGlvbiBlc3RpbG8oZmVhdHVyZSkgewogICAgICByZXR1cm4gewogICAgICAgIGZpbGxDb2xvcjogdGhpcy5vYnRlckNvcihmZWF0dXJlLnByb3BlcnRpZXMuQ09ESUJHRSksCiAgICAgICAgd2VpZ2h0OiAyLAogICAgICAgIG9wYWNpdHk6IDEsCiAgICAgICAgY29sb3I6ICdsaWdodGdyYXknLAogICAgICAgIGZpbGxPcGFjaXR5OiAxCiAgICAgIH07CiAgICB9LAogICAgZGVzdGFjYXI6IGZ1bmN0aW9uIGRlc3RhY2FyKGUpIHsKICAgICAgdmFyIGxheWVyID0gZS50YXJnZXQ7CiAgICAgIHZhciBjb2RpZ28gPSBsYXllci5mZWF0dXJlLnByb3BlcnRpZXMuQ09ESUJHRTsKICAgICAgbGF5ZXIuc2V0U3R5bGUoewogICAgICAgIHdlaWdodDogNSwKICAgICAgICBmaWxsT3BhY2l0eTogMQogICAgICB9KTsKCiAgICAgIGlmICghTC5Ccm93c2VyLmllICYmICFMLkJyb3dzZXIub3BlcmEgJiYgIUwuQnJvd3Nlci5lZGdlKSB7CiAgICAgICAgbGF5ZXIuYnJpbmdUb0Zyb250KCk7CiAgICAgIH0KCiAgICAgIHRoaXMuaW5mbyA9IEwucG9wdXAoewogICAgICAgIGF1dG9QYW46IGZhbHNlLAogICAgICAgIGNsb3NlQnV0dG9uOiBmYWxzZSwKICAgICAgICBhdXRvQ2xvc2U6IHRydWUsCiAgICAgICAgY2xhc3NOYW1lOiAnZXN0aWxvLXBvcHVwLW11bmljaXBpbycKICAgICAgfSkuc2V0TGF0TG5nKFstNywgLTM3LjhdKS5vcGVuT24odGhpcy5tYXBhKTsKICAgICAgdmFyIG11bmljaXBpbyA9IHRoaXMubXVuaWNpcGlvc1tjb2RpZ29dOwogICAgICB0aGlzLmF0dWFsaXphckluZm8obXVuaWNpcGlvLm5vbWUgKyAnIChQT0xPICcgKyBtdW5pY2lwaW8ubnVtUG9sbyArICcpJyk7CiAgICB9LAogICAgY2FuY2VsYXJEZXN0YXF1ZTogZnVuY3Rpb24gY2FuY2VsYXJEZXN0YXF1ZShlKSB7CiAgICAgIHRoaXMuY2FtYWRhR2VvLnJlc2V0U3R5bGUoZS50YXJnZXQpOwogICAgICBpZiAodGhpcy5pbmZvKSB0aGlzLmluZm8ucmVtb3ZlKCk7CiAgICB9LAogICAgYXR1YWxpemFyRWxlbWVudG9zOiBmdW5jdGlvbiBhdHVhbGl6YXJFbGVtZW50b3MoZmVhdHVyZSwgbGF5ZXIpIHsKICAgICAgbGF5ZXIub24oewogICAgICAgIG1vdXNlb3ZlcjogdGhpcy5kZXN0YWNhciwKICAgICAgICBtb3VzZW91dDogdGhpcy5jYW5jZWxhckRlc3RhcXVlLAogICAgICAgIGNsaWNrOiB0aGlzLm1vc3RyYXJEZXRhbGhlcwogICAgICB9KTsKICAgICAgdmFyIGNvZGlnbyA9IGxheWVyLmZlYXR1cmUucHJvcGVydGllcy5DT0RJQkdFOwogICAgICB2YXIgbXVuaWNpcGlvID0gdGhpcy5tdW5pY2lwaW9zW2NvZGlnb107CiAgICAgIHZhciBwb250b1RyYW5taXNzYW9SZW1vdGEgPSBtdW5pY2lwaW8uc2VkZVB0cjsKCiAgICAgIGlmICh0aGlzLmV0YXBhID09PSA2ICYmIHBvbnRvVHJhbm1pc3Nhb1JlbW90YSkgewogICAgICAgIGxheWVyLmJpbmRUb29sdGlwKCdUJywgewogICAgICAgICAgcGVybWFuZW50OiB0cnVlLAogICAgICAgICAgZGlyZWN0aW9uOiAnY2VudGVyJywKICAgICAgICAgIG9wYWNpdHk6IDEuMAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgYXR1YWxpemFySW5mbzogZnVuY3Rpb24gYXR1YWxpemFySW5mbyhjb250ZXVkbykgewogICAgICB0aGlzLmluZm8uc2V0Q29udGVudChjb250ZXVkbyk7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["VisaoMunicipios.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <b-container fluid=\"true\">\r\n    <b-row align-v=\"start\">\r\n      <navegacao/>\r\n    </b-row>\r\n\r\n    <b-row id=\"mapa-municipios\" align-v=\"center\"/>\r\n\r\n    <b-row>\r\n      <legenda/>\r\n    </b-row>\r\n\r\n    <visao-municipios-modal :municipio=\"municipios[municipioSelecionado]\"/>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from '../store/mutationtypes'\r\n    import {mapActions, mapGetters, mapMutations, mapState} from 'vuex'\r\n\r\n    import L from 'leaflet'\r\n    import Navegacao from '../componentes/Navegacao'\r\n    import Legenda from '../componentes/Legenda'\r\n\r\n    import mapa from '../assets/geo/mapamunicipios.js'\r\n    import mapanordeste from '../assets/geo/nordeste.js'\r\n\r\n    import VisaoMunicipiosModal from '../componentes/ModalMunicipios'\r\n\r\n    export default {\r\n        name: 'VisaoMunicipios',\r\n        components: {\r\n            VisaoMunicipiosModal,\r\n            Legenda,\r\n            Navegacao\r\n        },\r\n        data() {\r\n            return {\r\n                municipioSelecionado: '2600054',\r\n                mapa: null,\r\n                camadaGeo: null,\r\n                camadaFundo: null,\r\n                camadaFundo2: null,\r\n                info: null\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState({\r\n                municipios: state => state.municipios,\r\n                etapa: state => state.etapa\r\n            }),\r\n            ...mapGetters({\r\n                andamentos: 'getAndamentos',\r\n                corMunicipio: 'getCorMunicipio',\r\n                andamentosEtapa: 'getAndamentosEtapaMunicipios'\r\n            })\r\n        },\r\n        watch: {\r\n            andamentosEtapa() {\r\n                this.atualizarMapa()\r\n            }\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name);\r\n                vm.atualizarPolling();\r\n                vm.atualizarMapa()\r\n            })\r\n        },\r\n        mounted() {\r\n            const opcoesMapa = {\r\n                zoomControl: false,\r\n                attributionControl: false,\r\n                dragging: false,\r\n                zoomSnap: 0.1,\r\n                zoomDelta: 0.1\r\n            };\r\n\r\n            if (this.mapa === null || this.mapa === undefined) {\r\n                this.mapa = L.map('mapa-municipios', opcoesMapa)\r\n            }\r\n\r\n            if (this.camadaFundo == null) {\r\n                this.camadaFundo = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\r\n                    id: 'mapbox.light',\r\n                    accessToken: 'pk.eyJ1IjoibGVvbmFyZG9nYWx2YW8iLCJhIjoiY2psdjFkYmdiMHEydTNvbzY0c3RpcWVidyJ9.T-CQYKxMiHiPws79nAjETg'\r\n                }).addTo(this.mapa)\r\n            }\r\n\r\n            if (this.camadaFundo2 == null) {\r\n                this.camadaFundo2 = L.geoJSON(mapanordeste, {\r\n                    style: {fillColor: 'white', color: 'darkgray', weight: 1}\r\n                }).addTo(this.mapa)\r\n            }\r\n\r\n            if (this.camadaGeo == null) {\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa)\r\n            }\r\n\r\n            const bounds = this.camadaGeo.getBounds();\r\n            const zoom = this.mapa.getBoundsZoom(bounds);\r\n            this.mapa.setZoom(zoom - 0.2);\r\n            this.mapa.setMinZoom(zoom);\r\n            this.mapa.setMaxZoom(zoom);\r\n            this.mapa.fitBounds(bounds)\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                    atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                    mostrarModal: tipos.MOSTRAR_MODAL_MUNICIPIO\r\n                }\r\n            ),\r\n            atualizarMapa() {\r\n                this.camadaGeo.remove();\r\n\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa);\r\n\r\n                console.log('Mapa atualizado')\r\n            },\r\n            mostrarDetalhes(e) {\r\n                this.municipioSelecionado = e.target.feature.properties.CODIBGE;\r\n                this.mostrarModal(true)\r\n            },\r\n            obterCor(codIbge) {\r\n                return this.corMunicipio(codIbge) || 'grey'\r\n            },\r\n            estilo(feature) {\r\n                return {\r\n                    fillColor: this.obterCor(feature.properties.CODIBGE),\r\n                    weight: 2,\r\n                    opacity: 1,\r\n                    color: 'lightgray',\r\n                    fillOpacity: 1\r\n                }\r\n            },\r\n            destacar(e) {\r\n                const layer = e.target;\r\n                const codigo = layer.feature.properties.CODIBGE;\r\n                layer.setStyle({\r\n                    weight: 5,\r\n                    fillOpacity: 1\r\n                });\r\n\r\n                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n                    layer.bringToFront()\r\n                }\r\n\r\n                this.info = L.popup({\r\n                    autoPan: false,\r\n                    closeButton: false,\r\n                    autoClose: true,\r\n                    className: 'estilo-popup-municipio'\r\n                }).setLatLng([-7, -37.8]).openOn(this.mapa);\r\n\r\n                const municipio = this.municipios[codigo];\r\n                this.atualizarInfo(municipio.nome + ' (POLO ' + municipio.numPolo + ')')\r\n            },\r\n            cancelarDestaque(e) {\r\n                this.camadaGeo.resetStyle(e.target);\r\n                if (this.info) this.info.remove()\r\n            },\r\n            atualizarElementos(feature, layer) {\r\n                layer.on({\r\n                    mouseover: this.destacar,\r\n                    mouseout: this.cancelarDestaque,\r\n                    click: this.mostrarDetalhes\r\n                });\r\n                const codigo = layer.feature.properties.CODIBGE;\r\n                const municipio = this.municipios[codigo];\r\n                const pontoTranmissaoRemota = municipio.sedePtr;\r\n                if (this.etapa === 6 && pontoTranmissaoRemota) {\r\n                    layer.bindTooltip('T', {\r\n                            permanent: true,\r\n                            direction: 'center',\r\n                        opacity: 1.0\r\n                        }\r\n                    )\r\n                }\r\n            },\r\n            atualizarInfo(conteudo) {\r\n                this.info.setContent(conteudo)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n  #mapa-municipios {\r\n    height: 88vh;\r\n    z-index: 1;\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}