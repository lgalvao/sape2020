{"remainingRequest":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoConfiguracao.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoConfiguracao.vue","mtime":1582126213927},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as tipos from '../store/mutationtypes'\nimport Navegacao from '../componentes/Navegacao'\nimport {mapMutations, mapState, mapActions} from 'vuex'\n\nexport default {\n    name: \"VisaoConfiguracao\",\n    components: {\n        Navegacao\n    },\n    beforeRouteEnter(to, from, next) {\n        next(vm => {\n            vm.atualizarVisao(to.name);\n            vm.atualizarPolling();\n        })\n    },\n    computed: {\n        url: {\n            get() {\n                return this._url\n            },\n            set(valor) {\n                this.atualizarUrl(valor)\n            }\n        },\n        ativarNotificacoes: {\n            get() {\n                return this._ativarNotificacoes\n            },\n            set(valor) {\n                this.atualizarAtivarNotificacoes(valor)\n            }\n        },\n        alternarEtapas: {\n            get() {\n                return this._alternarEtapas\n            },\n            set(valor) {\n                if (valor === true) {\n                    this.atualizarModoTelao(false)\n                }\n                this.atualizarAlternarEtapas(valor)\n            }\n        },\n        modoTelao: {\n            get() {\n                return this._modoTelao\n            },\n            set(valor) {\n                if (valor === true) {\n                    this.atualizarAlternarEtapas(false)\n                }\n                this.atualizarModoTelao(valor)\n            }\n        },\n        testeAndamentos: {\n            get() {\n                return this._testeAndamentos\n            },\n            set(valor) {\n                this.atualizarTesteAndamentos(valor);\n                this.atualizarPolling()\n            }\n        },\n        ...mapState({\n            _url: state => state.url,\n            _ativarNotificacoes: state => state.ativarNotificacoes,\n            _alternarEtapas: state => state.alternarEtapas,\n            _modoTelao: state => state.modoTelao,\n            _testeAndamentos: state => state.testeAndamentos\n        })\n    },\n    methods: {\n        ...mapActions([\n            'atualizarPolling'\n        ]),\n        ...mapMutations({\n                atualizarVisao: tipos.ATUALIZAR_VISAO,\n                atualizarModoTelao: tipos.ATUALIZAR_MODO_TELAO,\n                atualizarAlternarEtapas: tipos.ATUALIZAR_ALTERNAR_ETAPAS,\n                atualizarAtivarNotificacoes: tipos.ATIVAR_NOTIFICACOES,\n                atualizarUrl: tipos.ATUALIZAR_URL,\n                atualizarTesteAndamentos: tipos.ATUALIZAR_TESTE_ANDAMENTOS\n            }\n        )\n    }\n}\n",{"version":3,"sources":["VisaoConfiguracao.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VisaoConfiguracao.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <b-container fluid=\"true\">\r\n    <b-row align-v=\"start\">\r\n      <navegacao titulo-geral=\"Configurações\"/>\r\n    </b-row>\r\n\r\n    <b-row style=\"font-size: large\">\r\n      <b-col\r\n          cols=\"12\"\r\n          md=\"7\">\r\n        <b-form>\r\n          <b-list-group>\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbTelao\"\r\n                  v-model=\"modoTelao\">\r\n                Modo telão\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbAlternar\"\r\n                  v-model=\"alternarEtapas\">\r\n                Alternar geração/preparação\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbNotificacao\"\r\n                  v-model=\"ativarNotificacoes\">\r\n                Ativar notificações (beta!)\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              <b-form-checkbox\r\n                  id=\"cbTesteAndamentos\"\r\n                  v-model=\"testeAndamentos\">\r\n                Teste de andamentos (usado pela equipe de dev)\r\n              </b-form-checkbox>\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              URL do servidor (usado pela equipe de dev):\r\n              <b-form-input\r\n                  id=\"urlServidor\"\r\n                  v-model=\"url\"\r\n                  placeholder=\"Endereço do servidor\"\r\n                  style=\"width:50%\">\r\n              </b-form-input>\r\n            </b-list-group-item>\r\n\r\n          </b-list-group>\r\n        </b-form>\r\n      </b-col>\r\n\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from '../store/mutationtypes'\r\n    import Navegacao from '../componentes/Navegacao'\r\n    import {mapMutations, mapState, mapActions} from 'vuex'\r\n\r\n    export default {\r\n        name: \"VisaoConfiguracao\",\r\n        components: {\r\n            Navegacao\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name);\r\n                vm.atualizarPolling();\r\n            })\r\n        },\r\n        computed: {\r\n            url: {\r\n                get() {\r\n                    return this._url\r\n                },\r\n                set(valor) {\r\n                    this.atualizarUrl(valor)\r\n                }\r\n            },\r\n            ativarNotificacoes: {\r\n                get() {\r\n                    return this._ativarNotificacoes\r\n                },\r\n                set(valor) {\r\n                    this.atualizarAtivarNotificacoes(valor)\r\n                }\r\n            },\r\n            alternarEtapas: {\r\n                get() {\r\n                    return this._alternarEtapas\r\n                },\r\n                set(valor) {\r\n                    if (valor === true) {\r\n                        this.atualizarModoTelao(false)\r\n                    }\r\n                    this.atualizarAlternarEtapas(valor)\r\n                }\r\n            },\r\n            modoTelao: {\r\n                get() {\r\n                    return this._modoTelao\r\n                },\r\n                set(valor) {\r\n                    if (valor === true) {\r\n                        this.atualizarAlternarEtapas(false)\r\n                    }\r\n                    this.atualizarModoTelao(valor)\r\n                }\r\n            },\r\n            testeAndamentos: {\r\n                get() {\r\n                    return this._testeAndamentos\r\n                },\r\n                set(valor) {\r\n                    this.atualizarTesteAndamentos(valor);\r\n                    this.atualizarPolling()\r\n                }\r\n            },\r\n            ...mapState({\r\n                _url: state => state.url,\r\n                _ativarNotificacoes: state => state.ativarNotificacoes,\r\n                _alternarEtapas: state => state.alternarEtapas,\r\n                _modoTelao: state => state.modoTelao,\r\n                _testeAndamentos: state => state.testeAndamentos\r\n            })\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                    atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                    atualizarModoTelao: tipos.ATUALIZAR_MODO_TELAO,\r\n                    atualizarAlternarEtapas: tipos.ATUALIZAR_ALTERNAR_ETAPAS,\r\n                    atualizarAtivarNotificacoes: tipos.ATIVAR_NOTIFICACOES,\r\n                    atualizarUrl: tipos.ATUALIZAR_URL,\r\n                    atualizarTesteAndamentos: tipos.ATUALIZAR_TESTE_ANDAMENTOS\r\n                }\r\n            )\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}