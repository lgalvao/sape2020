{"remainingRequest":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoMunicipios.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoMunicipios.vue","mtime":1582222179507},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIHRpcG9zIGZyb20gJy4uL3N0b3JlL211dGF0aW9udHlwZXMnCmltcG9ydCB7bWFwQWN0aW9ucywgbWFwR2V0dGVycywgbWFwTXV0YXRpb25zLCBtYXBTdGF0ZX0gZnJvbSAndnVleCcKCmltcG9ydCBMIGZyb20gJ2xlYWZsZXQnCmltcG9ydCBOYXZlZ2FjYW8gZnJvbSAnLi4vY29tcG9uZW50ZXMvTmF2ZWdhY2FvJwppbXBvcnQgTGVnZW5kYSBmcm9tICcuLi9jb21wb25lbnRlcy9MZWdlbmRhJwoKaW1wb3J0IG1hcGEgZnJvbSAnLi4vYXNzZXRzL2dlby9tYXBhbXVuaWNpcGlvcy5qcycKaW1wb3J0IG1hcGFub3JkZXN0ZSBmcm9tICcuLi9hc3NldHMvZ2VvL25vcmRlc3RlLmpzJwoKaW1wb3J0IFZpc2FvTXVuaWNpcGlvc01vZGFsIGZyb20gJy4uL2NvbXBvbmVudGVzL01vZGFsTXVuaWNpcGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdWaXNhb011bmljaXBpb3MnLAogICAgY29tcG9uZW50czogewogICAgICAgIFZpc2FvTXVuaWNpcGlvc01vZGFsLAogICAgICAgIExlZ2VuZGEsCiAgICAgICAgTmF2ZWdhY2FvCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBtdW5pY2lwaW9TZWxlY2lvbmFkbzogJzI2MDAwNTQnLAogICAgICAgICAgICBtYXBhOiBudWxsLAogICAgICAgICAgICBjYW1hZGFHZW86IG51bGwsCiAgICAgICAgICAgIGNhbWFkYUZ1bmRvOiBudWxsLAogICAgICAgICAgICBjYW1hZGFGdW5kbzI6IG51bGwsCiAgICAgICAgICAgIGluZm86IG51bGwKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAuLi5tYXBTdGF0ZSh7CiAgICAgICAgICAgIG11bmljaXBpb3M6IHN0YXRlID0+IHN0YXRlLm11bmljaXBpb3MsCiAgICAgICAgICAgIGV0YXBhOiBzdGF0ZSA9PiBzdGF0ZS5ldGFwYQogICAgICAgIH0pLAogICAgICAgIC4uLm1hcEdldHRlcnMoewogICAgICAgICAgICBhbmRhbWVudG9zOiAnZ2V0QW5kYW1lbnRvcycsCiAgICAgICAgICAgIGNvck11bmljaXBpbzogJ2dldENvck11bmljaXBpbycsCiAgICAgICAgICAgIGFuZGFtZW50b3NFdGFwYTogJ2dldEFuZGFtZW50b3NFdGFwYU11bmljaXBpb3MnCiAgICAgICAgfSkKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGFuZGFtZW50b3NFdGFwYSgpIHsKICAgICAgICAgICAgdGhpcy5hdHVhbGl6YXJNYXBhKCkKICAgICAgICB9CiAgICB9LAogICAgYmVmb3JlUm91dGVFbnRlcih0bywgZnJvbSwgbmV4dCkgewogICAgICAgIG5leHQodm0gPT4gewogICAgICAgICAgICB2bS5hdHVhbGl6YXJWaXNhbyh0by5uYW1lKTsKICAgICAgICAgICAgdm0uYXR1YWxpemFyUG9sbGluZygpOwogICAgICAgICAgICB2bS5hdHVhbGl6YXJNYXBhKCkKICAgICAgICB9KQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgY29uc3Qgb3Bjb2VzTWFwYSA9IHsKICAgICAgICAgICAgem9vbUNvbnRyb2w6IGZhbHNlLAogICAgICAgICAgICBhdHRyaWJ1dGlvbkNvbnRyb2w6IGZhbHNlLAogICAgICAgICAgICBkcmFnZ2luZzogZmFsc2UsCiAgICAgICAgICAgIHpvb21TbmFwOiAwLjEsCiAgICAgICAgICAgIHpvb21EZWx0YTogMC4xCiAgICAgICAgfTsKCiAgICAgICAgaWYgKHRoaXMubWFwYSA9PT0gbnVsbCB8fCB0aGlzLm1hcGEgPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICB0aGlzLm1hcGEgPSBMLm1hcCgnbWFwYS1tdW5pY2lwaW9zJywgb3Bjb2VzTWFwYSkKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLmNhbWFkYUZ1bmRvID09IG51bGwpIHsKICAgICAgICAgICAgdGhpcy5jYW1hZGFGdW5kbyA9IEwudGlsZUxheWVyKCdodHRwczovL2FwaS50aWxlcy5tYXBib3guY29tL3Y0L3tpZH0ve3p9L3t4fS97eX0ucG5nP2FjY2Vzc190b2tlbj17YWNjZXNzVG9rZW59JywgewogICAgICAgICAgICAgICAgaWQ6ICdtYXBib3gubGlnaHQnLAogICAgICAgICAgICAgICAgYWNjZXNzVG9rZW46ICdway5leUoxSWpvaWJHVnZibUZ5Wkc5bllXeDJZVzhpTENKaElqb2lZMnBzZGpGa1ltZGlNSEV5ZFROdmJ6WTBjM1JwY1dWaWR5SjkuVC1DUVlLeE1pSGlQd3M3OW5BakVUZycKICAgICAgICAgICAgfSkuYWRkVG8odGhpcy5tYXBhKQogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMuY2FtYWRhRnVuZG8yID09IG51bGwpIHsKICAgICAgICAgICAgdGhpcy5jYW1hZGFGdW5kbzIgPSBMLmdlb0pTT04obWFwYW5vcmRlc3RlLCB7CiAgICAgICAgICAgICAgICBzdHlsZToge2ZpbGxDb2xvcjogJ3doaXRlJywgY29sb3I6ICdkYXJrZ3JheScsIHdlaWdodDogMX0KICAgICAgICAgICAgfSkuYWRkVG8odGhpcy5tYXBhKQogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMuY2FtYWRhR2VvID09IG51bGwpIHsKICAgICAgICAgICAgdGhpcy5jYW1hZGFHZW8gPSBMLmdlb0pTT04obWFwYSwgewogICAgICAgICAgICAgICAgc3R5bGU6IHRoaXMuZXN0aWxvLAogICAgICAgICAgICAgICAgb25FYWNoRmVhdHVyZTogdGhpcy5hdHVhbGl6YXJFbGVtZW50b3MKICAgICAgICAgICAgfSkuYWRkVG8odGhpcy5tYXBhKQogICAgICAgIH0KCiAgICAgICAgY29uc3QgYm91bmRzID0gdGhpcy5jYW1hZGFHZW8uZ2V0Qm91bmRzKCk7CiAgICAgICAgY29uc3Qgem9vbSA9IHRoaXMubWFwYS5nZXRCb3VuZHNab29tKGJvdW5kcyk7CiAgICAgICAgdGhpcy5tYXBhLnNldFpvb20oem9vbSAtIDAuMik7CiAgICAgICAgdGhpcy5tYXBhLnNldE1pblpvb20oem9vbSk7CiAgICAgICAgdGhpcy5tYXBhLnNldE1heFpvb20oem9vbSk7CiAgICAgICAgdGhpcy5tYXBhLmZpdEJvdW5kcyhib3VuZHMpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoWwogICAgICAgICAgICAnYXR1YWxpemFyUG9sbGluZycKICAgICAgICBdKSwKICAgICAgICAuLi5tYXBNdXRhdGlvbnMoewogICAgICAgICAgICAgICAgYXR1YWxpemFyVmlzYW86IHRpcG9zLkFUVUFMSVpBUl9WSVNBTywKICAgICAgICAgICAgICAgIG1vc3RyYXJNb2RhbDogdGlwb3MuTU9TVFJBUl9NT0RBTF9NVU5JQ0lQSU8KICAgICAgICAgICAgfQogICAgICAgICksCiAgICAgICAgYXR1YWxpemFyTWFwYSgpIHsKICAgICAgICAgICAgdGhpcy5jYW1hZGFHZW8ucmVtb3ZlKCk7CgogICAgICAgICAgICB0aGlzLmNhbWFkYUdlbyA9IEwuZ2VvSlNPTihtYXBhLCB7CiAgICAgICAgICAgICAgICBzdHlsZTogdGhpcy5lc3RpbG8sCiAgICAgICAgICAgICAgICBvbkVhY2hGZWF0dXJlOiB0aGlzLmF0dWFsaXphckVsZW1lbnRvcwogICAgICAgICAgICB9KS5hZGRUbyh0aGlzLm1hcGEpOwoKICAgICAgICAgICAgY29uc29sZS5sb2coJ01hcGEgYXR1YWxpemFkbycpCiAgICAgICAgfSwKICAgICAgICBtb3N0cmFyRGV0YWxoZXMoZSkgewogICAgICAgICAgICB0aGlzLm11bmljaXBpb1NlbGVjaW9uYWRvID0gZS50YXJnZXQuZmVhdHVyZS5wcm9wZXJ0aWVzLkNPRElCR0U7CiAgICAgICAgICAgIHRoaXMubW9zdHJhck1vZGFsKHRydWUpCiAgICAgICAgfSwKICAgICAgICBvYnRlckNvcihjb2RJYmdlKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvck11bmljaXBpbyhjb2RJYmdlKSB8fCAnZ3JleScKICAgICAgICB9LAogICAgICAgIGVzdGlsbyhmZWF0dXJlKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBmaWxsQ29sb3I6IHRoaXMub2J0ZXJDb3IoZmVhdHVyZS5wcm9wZXJ0aWVzLkNPRElCR0UpLAogICAgICAgICAgICAgICAgd2VpZ2h0OiAyLAogICAgICAgICAgICAgICAgb3BhY2l0eTogMSwKICAgICAgICAgICAgICAgIGNvbG9yOiAnbGlnaHRncmF5JywKICAgICAgICAgICAgICAgIGZpbGxPcGFjaXR5OiAxCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGRlc3RhY2FyKGUpIHsKICAgICAgICAgICAgY29uc3QgbGF5ZXIgPSBlLnRhcmdldDsKICAgICAgICAgICAgY29uc3QgY29kaWdvID0gbGF5ZXIuZmVhdHVyZS5wcm9wZXJ0aWVzLkNPRElCR0U7CiAgICAgICAgICAgIGxheWVyLnNldFN0eWxlKHsKICAgICAgICAgICAgICAgIHdlaWdodDogNSwKICAgICAgICAgICAgICAgIGZpbGxPcGFjaXR5OiAxCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgaWYgKCFMLkJyb3dzZXIuaWUgJiYgIUwuQnJvd3Nlci5vcGVyYSAmJiAhTC5Ccm93c2VyLmVkZ2UpIHsKICAgICAgICAgICAgICAgIGxheWVyLmJyaW5nVG9Gcm9udCgpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuaW5mbyA9IEwucG9wdXAoewogICAgICAgICAgICAgICAgYXV0b1BhbjogZmFsc2UsCiAgICAgICAgICAgICAgICBjbG9zZUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgICBhdXRvQ2xvc2U6IHRydWUsCiAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlc3RpbG8tcG9wdXAtbXVuaWNpcGlvJwogICAgICAgICAgICB9KS5zZXRMYXRMbmcoWy03LCAtMzcuOF0pLm9wZW5Pbih0aGlzLm1hcGEpOwoKICAgICAgICAgICAgY29uc3QgbXVuaWNpcGlvID0gdGhpcy5tdW5pY2lwaW9zW2NvZGlnb107CiAgICAgICAgICAgIHRoaXMuYXR1YWxpemFySW5mbyhtdW5pY2lwaW8ubm9tZSArICcgKFBPTE8gJyArIG11bmljaXBpby5udW1Qb2xvICsgJyknKQogICAgICAgIH0sCiAgICAgICAgY2FuY2VsYXJEZXN0YXF1ZShlKSB7CiAgICAgICAgICAgIHRoaXMuY2FtYWRhR2VvLnJlc2V0U3R5bGUoZS50YXJnZXQpOwogICAgICAgICAgICBpZiAodGhpcy5pbmZvKSB0aGlzLmluZm8ucmVtb3ZlKCkKICAgICAgICB9LAogICAgICAgIGF0dWFsaXphckVsZW1lbnRvcyhmZWF0dXJlLCBsYXllcikgewogICAgICAgICAgICBsYXllci5vbih7CiAgICAgICAgICAgICAgICBtb3VzZW92ZXI6IHRoaXMuZGVzdGFjYXIsCiAgICAgICAgICAgICAgICBtb3VzZW91dDogdGhpcy5jYW5jZWxhckRlc3RhcXVlLAogICAgICAgICAgICAgICAgY2xpY2s6IHRoaXMubW9zdHJhckRldGFsaGVzCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjb25zdCBjb2RpZ28gPSBsYXllci5mZWF0dXJlLnByb3BlcnRpZXMuQ09ESUJHRTsKICAgICAgICAgICAgY29uc3QgbXVuaWNpcGlvID0gdGhpcy5tdW5pY2lwaW9zW2NvZGlnb107CiAgICAgICAgICAgIGNvbnN0IHBvbnRvVHJhbm1pc3Nhb1JlbW90YSA9IG11bmljaXBpby5zZWRlUHRyOwogICAgICAgICAgICBpZiAodGhpcy5ldGFwYSA9PT0gNiAmJiBwb250b1RyYW5taXNzYW9SZW1vdGEpIHsKICAgICAgICAgICAgICAgIGxheWVyLmJpbmRUb29sdGlwKCdUJywgewogICAgICAgICAgICAgICAgICAgICAgICBwZXJtYW5lbnQ6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogJ2NlbnRlcicsCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMS4wCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBhdHVhbGl6YXJJbmZvKGNvbnRldWRvKSB7CiAgICAgICAgICAgIHRoaXMuaW5mby5zZXRDb250ZW50KGNvbnRldWRvKQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["VisaoMunicipios.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"VisaoMunicipios.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <b-container fluid=\"true\">\r\n    <b-row align-v=\"start\">\r\n      <navegacao/>\r\n    </b-row>\r\n\r\n    <b-row id=\"mapa-municipios\" align-v=\"center\"/>\r\n\r\n    <b-row>\r\n      <legenda/>\r\n    </b-row>\r\n\r\n    <visao-municipios-modal :municipio=\"municipios[municipioSelecionado]\"/>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from '../store/mutationtypes'\r\n    import {mapActions, mapGetters, mapMutations, mapState} from 'vuex'\r\n\r\n    import L from 'leaflet'\r\n    import Navegacao from '../componentes/Navegacao'\r\n    import Legenda from '../componentes/Legenda'\r\n\r\n    import mapa from '../assets/geo/mapamunicipios.js'\r\n    import mapanordeste from '../assets/geo/nordeste.js'\r\n\r\n    import VisaoMunicipiosModal from '../componentes/ModalMunicipios'\r\n\r\n    export default {\r\n        name: 'VisaoMunicipios',\r\n        components: {\r\n            VisaoMunicipiosModal,\r\n            Legenda,\r\n            Navegacao\r\n        },\r\n        data() {\r\n            return {\r\n                municipioSelecionado: '2600054',\r\n                mapa: null,\r\n                camadaGeo: null,\r\n                camadaFundo: null,\r\n                camadaFundo2: null,\r\n                info: null\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState({\r\n                municipios: state => state.municipios,\r\n                etapa: state => state.etapa\r\n            }),\r\n            ...mapGetters({\r\n                andamentos: 'getAndamentos',\r\n                corMunicipio: 'getCorMunicipio',\r\n                andamentosEtapa: 'getAndamentosEtapaMunicipios'\r\n            })\r\n        },\r\n        watch: {\r\n            andamentosEtapa() {\r\n                this.atualizarMapa()\r\n            }\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name);\r\n                vm.atualizarPolling();\r\n                vm.atualizarMapa()\r\n            })\r\n        },\r\n        mounted() {\r\n            const opcoesMapa = {\r\n                zoomControl: false,\r\n                attributionControl: false,\r\n                dragging: false,\r\n                zoomSnap: 0.1,\r\n                zoomDelta: 0.1\r\n            };\r\n\r\n            if (this.mapa === null || this.mapa === undefined) {\r\n                this.mapa = L.map('mapa-municipios', opcoesMapa)\r\n            }\r\n\r\n            if (this.camadaFundo == null) {\r\n                this.camadaFundo = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\r\n                    id: 'mapbox.light',\r\n                    accessToken: 'pk.eyJ1IjoibGVvbmFyZG9nYWx2YW8iLCJhIjoiY2psdjFkYmdiMHEydTNvbzY0c3RpcWVidyJ9.T-CQYKxMiHiPws79nAjETg'\r\n                }).addTo(this.mapa)\r\n            }\r\n\r\n            if (this.camadaFundo2 == null) {\r\n                this.camadaFundo2 = L.geoJSON(mapanordeste, {\r\n                    style: {fillColor: 'white', color: 'darkgray', weight: 1}\r\n                }).addTo(this.mapa)\r\n            }\r\n\r\n            if (this.camadaGeo == null) {\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa)\r\n            }\r\n\r\n            const bounds = this.camadaGeo.getBounds();\r\n            const zoom = this.mapa.getBoundsZoom(bounds);\r\n            this.mapa.setZoom(zoom - 0.2);\r\n            this.mapa.setMinZoom(zoom);\r\n            this.mapa.setMaxZoom(zoom);\r\n            this.mapa.fitBounds(bounds)\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                    atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                    mostrarModal: tipos.MOSTRAR_MODAL_MUNICIPIO\r\n                }\r\n            ),\r\n            atualizarMapa() {\r\n                this.camadaGeo.remove();\r\n\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa);\r\n\r\n                console.log('Mapa atualizado')\r\n            },\r\n            mostrarDetalhes(e) {\r\n                this.municipioSelecionado = e.target.feature.properties.CODIBGE;\r\n                this.mostrarModal(true)\r\n            },\r\n            obterCor(codIbge) {\r\n                return this.corMunicipio(codIbge) || 'grey'\r\n            },\r\n            estilo(feature) {\r\n                return {\r\n                    fillColor: this.obterCor(feature.properties.CODIBGE),\r\n                    weight: 2,\r\n                    opacity: 1,\r\n                    color: 'lightgray',\r\n                    fillOpacity: 1\r\n                }\r\n            },\r\n            destacar(e) {\r\n                const layer = e.target;\r\n                const codigo = layer.feature.properties.CODIBGE;\r\n                layer.setStyle({\r\n                    weight: 5,\r\n                    fillOpacity: 1\r\n                });\r\n\r\n                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n                    layer.bringToFront()\r\n                }\r\n\r\n                this.info = L.popup({\r\n                    autoPan: false,\r\n                    closeButton: false,\r\n                    autoClose: true,\r\n                    className: 'estilo-popup-municipio'\r\n                }).setLatLng([-7, -37.8]).openOn(this.mapa);\r\n\r\n                const municipio = this.municipios[codigo];\r\n                this.atualizarInfo(municipio.nome + ' (POLO ' + municipio.numPolo + ')')\r\n            },\r\n            cancelarDestaque(e) {\r\n                this.camadaGeo.resetStyle(e.target);\r\n                if (this.info) this.info.remove()\r\n            },\r\n            atualizarElementos(feature, layer) {\r\n                layer.on({\r\n                    mouseover: this.destacar,\r\n                    mouseout: this.cancelarDestaque,\r\n                    click: this.mostrarDetalhes\r\n                });\r\n                const codigo = layer.feature.properties.CODIBGE;\r\n                const municipio = this.municipios[codigo];\r\n                const pontoTranmissaoRemota = municipio.sedePtr;\r\n                if (this.etapa === 6 && pontoTranmissaoRemota) {\r\n                    layer.bindTooltip('T', {\r\n                            permanent: true,\r\n                            direction: 'center',\r\n                        opacity: 1.0\r\n                        }\r\n                    )\r\n                }\r\n            },\r\n            atualizarInfo(conteudo) {\r\n                this.info.setContent(conteudo)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n  #mapa-municipios {\r\n    height: 88vh;\r\n    z-index: 1;\r\n  }\r\n\r\n</style>\r\n"]}]}