{"remainingRequest":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoMunicipios.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoMunicipios.vue","mtime":1582126213116},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as tipos from \"../store/mutationtypes\";\nimport {mapActions, mapGetters, mapMutations, mapState} from 'vuex';\n\nimport L from 'leaflet'\nimport Navegacao from '../componentes/Navegacao';\nimport Legenda from '../componentes/Legenda';\n\nimport mapa from '../assets/geo/mapamunicipios.js';\nimport mapanordeste from '../assets/geo/nordeste.js';\n\nimport VisaoMunicipiosModal from '../componentes/VisaoMunicipiosModal';\n\nexport default {\n    name: 'VisaoMunicipios',\n    components: {\n        VisaoMunicipiosModal,\n        Legenda,\n        Navegacao\n    },\n    data() {\n        return {\n            municipioSelecionado: \"2600054\",\n            mapa: null,\n            camadaGeo: null,\n            camadaFundo: null,\n            camadaFundo2: null,\n            info: null\n        }\n    },\n    computed: {\n        ...mapState({\n            municipios: state => state.municipios,\n            etapa: state => state.etapa\n        }),\n        ...mapGetters({\n            andamentos: 'getAndamentos',\n            corMunicipio: 'getCorMunicipio',\n            andamentosEtapa: 'getAndamentosEtapaMunicipios'\n        })\n    },\n    watch: {\n        andamentosEtapa() {\n            this.atualizarMapa()\n        }\n    },\n    beforeRouteEnter(to, from, next) {\n        next(vm => {\n            vm.atualizarVisao(to.name);\n            vm.atualizarPolling();\n            vm.atualizarMapa();\n        })\n    },\n    mounted() {\n        const opcoesMapa = {\n            zoomControl: false,\n            attributionControl: false,\n            dragging: false,\n            zoomSnap: 0.1,\n            zoomDelta: 0.1,\n        };\n\n        if (this.mapa === null || this.mapa === undefined) {\n            this.mapa = L.map('mapa-municipios', opcoesMapa);\n        }\n\n        if (this.camadaFundo == null) {\n            this.camadaFundo = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n                id: 'mapbox.light',\n                accessToken: 'pk.eyJ1IjoibGVvbmFyZG9nYWx2YW8iLCJhIjoiY2psdjFkYmdiMHEydTNvbzY0c3RpcWVidyJ9.T-CQYKxMiHiPws79nAjETg'\n            }).addTo(this.mapa);\n        }\n\n        if (this.camadaFundo2 == null) {\n            this.camadaFundo2 = L.geoJSON(mapanordeste, {\n                style: {fillColor: 'white', color: 'darkgray', weight: 1}\n            }).addTo(this.mapa);\n        }\n\n        if (this.camadaGeo == null) {\n            this.camadaGeo = L.geoJSON(mapa, {\n                style: this.estilo,\n                onEachFeature: this.atualizarElementos\n            }).addTo(this.mapa);\n        }\n\n        const bounds = this.camadaGeo.getBounds();\n        const zoom = this.mapa.getBoundsZoom(bounds);\n        this.mapa.setZoom(zoom - 0.2);\n        this.mapa.setMinZoom(zoom);\n        this.mapa.setMaxZoom(zoom);\n        this.mapa.fitBounds(bounds);\n    },\n    methods: {\n        ...mapActions([\n            'atualizarPolling'\n        ]),\n        ...mapMutations({\n                atualizarVisao: tipos.ATUALIZAR_VISAO,\n                mostrarModal: tipos.MOSTRAR_MODAL_MUNICIPIO\n            }\n        ),\n        atualizarMapa() {\n            this.camadaGeo.remove();\n\n            this.camadaGeo = L.geoJSON(mapa, {\n                style: this.estilo,\n                onEachFeature: this.atualizarElementos\n            }).addTo(this.mapa);\n\n            console.log('Mapa atualizado')\n        },\n        mostrarDetalhes(e) {\n            this.municipioSelecionado = e.target.feature.properties.CODIBGE;\n            this.mostrarModal(true)\n        },\n        obterCor(codIbge) {\n            return this.corMunicipio(codIbge) || 'grey'\n        },\n        estilo(feature) {\n            return {\n                fillColor: this.obterCor(feature.properties.CODIBGE),\n                weight: 2,\n                opacity: 1,\n                color: 'lightgray',\n                fillOpacity: 1\n            }\n        },\n        destacar(e) {\n            const layer = e.target;\n            const codigo = layer.feature.properties.CODIBGE;\n            layer.setStyle({\n                weight: 5,\n                fillOpacity: 1,\n            });\n\n            if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n                layer.bringToFront();\n            }\n\n            this.info = L.popup({\n                autoPan: false,\n                closeButton: false,\n                autoClose: true,\n                className: 'estilo-popup-municipio'\n            }).setLatLng([-7, -37.8]).openOn(this.mapa);\n\n            const municipio = this.municipios[codigo];\n            this.atualizarInfo(municipio.nome + \" (POLO \" + municipio.numPolo + \")\")\n        },\n        cancelarDestaque(e) {\n            this.camadaGeo.resetStyle(e.target);\n            if (this.info) this.info.remove()\n        },\n        atualizarElementos(feature, layer) {\n            layer.on({\n                mouseover: this.destacar,\n                mouseout: this.cancelarDestaque,\n                click: this.mostrarDetalhes\n            });\n            const codigo = layer.feature.properties.CODIBGE;\n            const municipio = this.municipios[codigo];\n            const pontoTranmissaoRemota = municipio.sedePtr;\n            if (this.etapa === 6 && pontoTranmissaoRemota) {\n                layer.bindTooltip(\"T\", {\n                        permanent: true,\n                        direction: 'center',\n                        opacity: 1.0,\n                        className: 'estilo-tooltip-municipio'\n                    }\n                )\n            }\n        },\n        atualizarInfo(conteudo) {\n            this.info.setContent(conteudo)\n        }\n    }\n}\n",{"version":3,"sources":["VisaoMunicipios.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"VisaoMunicipios.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <b-container fluid=\"true\">\r\n    <b-row align-v=\"start\">\r\n      <navegacao/>\r\n    </b-row>\r\n\r\n    <b-row id=\"mapa-municipios\" align-v=\"center\"></b-row>\r\n\r\n    <b-row>\r\n      <legenda/>\r\n    </b-row>\r\n\r\n    <visao-municipios-modal\r\n        :municipio=municipios[municipioSelecionado]>\r\n\r\n    </visao-municipios-modal>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from \"../store/mutationtypes\";\r\n    import {mapActions, mapGetters, mapMutations, mapState} from 'vuex';\r\n\r\n    import L from 'leaflet'\r\n    import Navegacao from '../componentes/Navegacao';\r\n    import Legenda from '../componentes/Legenda';\r\n\r\n    import mapa from '../assets/geo/mapamunicipios.js';\r\n    import mapanordeste from '../assets/geo/nordeste.js';\r\n\r\n    import VisaoMunicipiosModal from '../componentes/VisaoMunicipiosModal';\r\n\r\n    export default {\r\n        name: 'VisaoMunicipios',\r\n        components: {\r\n            VisaoMunicipiosModal,\r\n            Legenda,\r\n            Navegacao\r\n        },\r\n        data() {\r\n            return {\r\n                municipioSelecionado: \"2600054\",\r\n                mapa: null,\r\n                camadaGeo: null,\r\n                camadaFundo: null,\r\n                camadaFundo2: null,\r\n                info: null\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState({\r\n                municipios: state => state.municipios,\r\n                etapa: state => state.etapa\r\n            }),\r\n            ...mapGetters({\r\n                andamentos: 'getAndamentos',\r\n                corMunicipio: 'getCorMunicipio',\r\n                andamentosEtapa: 'getAndamentosEtapaMunicipios'\r\n            })\r\n        },\r\n        watch: {\r\n            andamentosEtapa() {\r\n                this.atualizarMapa()\r\n            }\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name);\r\n                vm.atualizarPolling();\r\n                vm.atualizarMapa();\r\n            })\r\n        },\r\n        mounted() {\r\n            const opcoesMapa = {\r\n                zoomControl: false,\r\n                attributionControl: false,\r\n                dragging: false,\r\n                zoomSnap: 0.1,\r\n                zoomDelta: 0.1,\r\n            };\r\n\r\n            if (this.mapa === null || this.mapa === undefined) {\r\n                this.mapa = L.map('mapa-municipios', opcoesMapa);\r\n            }\r\n\r\n            if (this.camadaFundo == null) {\r\n                this.camadaFundo = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\r\n                    id: 'mapbox.light',\r\n                    accessToken: 'pk.eyJ1IjoibGVvbmFyZG9nYWx2YW8iLCJhIjoiY2psdjFkYmdiMHEydTNvbzY0c3RpcWVidyJ9.T-CQYKxMiHiPws79nAjETg'\r\n                }).addTo(this.mapa);\r\n            }\r\n\r\n            if (this.camadaFundo2 == null) {\r\n                this.camadaFundo2 = L.geoJSON(mapanordeste, {\r\n                    style: {fillColor: 'white', color: 'darkgray', weight: 1}\r\n                }).addTo(this.mapa);\r\n            }\r\n\r\n            if (this.camadaGeo == null) {\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa);\r\n            }\r\n\r\n            const bounds = this.camadaGeo.getBounds();\r\n            const zoom = this.mapa.getBoundsZoom(bounds);\r\n            this.mapa.setZoom(zoom - 0.2);\r\n            this.mapa.setMinZoom(zoom);\r\n            this.mapa.setMaxZoom(zoom);\r\n            this.mapa.fitBounds(bounds);\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                    atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                    mostrarModal: tipos.MOSTRAR_MODAL_MUNICIPIO\r\n                }\r\n            ),\r\n            atualizarMapa() {\r\n                this.camadaGeo.remove();\r\n\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa);\r\n\r\n                console.log('Mapa atualizado')\r\n            },\r\n            mostrarDetalhes(e) {\r\n                this.municipioSelecionado = e.target.feature.properties.CODIBGE;\r\n                this.mostrarModal(true)\r\n            },\r\n            obterCor(codIbge) {\r\n                return this.corMunicipio(codIbge) || 'grey'\r\n            },\r\n            estilo(feature) {\r\n                return {\r\n                    fillColor: this.obterCor(feature.properties.CODIBGE),\r\n                    weight: 2,\r\n                    opacity: 1,\r\n                    color: 'lightgray',\r\n                    fillOpacity: 1\r\n                }\r\n            },\r\n            destacar(e) {\r\n                const layer = e.target;\r\n                const codigo = layer.feature.properties.CODIBGE;\r\n                layer.setStyle({\r\n                    weight: 5,\r\n                    fillOpacity: 1,\r\n                });\r\n\r\n                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n                    layer.bringToFront();\r\n                }\r\n\r\n                this.info = L.popup({\r\n                    autoPan: false,\r\n                    closeButton: false,\r\n                    autoClose: true,\r\n                    className: 'estilo-popup-municipio'\r\n                }).setLatLng([-7, -37.8]).openOn(this.mapa);\r\n\r\n                const municipio = this.municipios[codigo];\r\n                this.atualizarInfo(municipio.nome + \" (POLO \" + municipio.numPolo + \")\")\r\n            },\r\n            cancelarDestaque(e) {\r\n                this.camadaGeo.resetStyle(e.target);\r\n                if (this.info) this.info.remove()\r\n            },\r\n            atualizarElementos(feature, layer) {\r\n                layer.on({\r\n                    mouseover: this.destacar,\r\n                    mouseout: this.cancelarDestaque,\r\n                    click: this.mostrarDetalhes\r\n                });\r\n                const codigo = layer.feature.properties.CODIBGE;\r\n                const municipio = this.municipios[codigo];\r\n                const pontoTranmissaoRemota = municipio.sedePtr;\r\n                if (this.etapa === 6 && pontoTranmissaoRemota) {\r\n                    layer.bindTooltip(\"T\", {\r\n                            permanent: true,\r\n                            direction: 'center',\r\n                            opacity: 1.0,\r\n                            className: 'estilo-tooltip-municipio'\r\n                        }\r\n                    )\r\n                }\r\n            },\r\n            atualizarInfo(conteudo) {\r\n                this.info.setContent(conteudo)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n  #mapa-municipios {\r\n    height: 88vh;\r\n    z-index: 1;\r\n  }\r\n\r\n  .estilo-popup-municipio .leaflet-popup-tip {\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  .estilo-popup-municipio .leaflet-popup-content-wrapper {\r\n    position: relative;\r\n    background: #343a40;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    border-radius: 0;\r\n    font-size: 16px;\r\n    box-shadow: none;\r\n  }\r\n\r\n  .estilo-tooltip-municipio {\r\n    background-color: #343a40 !important;\r\n    color: white !important;\r\n    border: 0 !important;\r\n    font-size: 14px;\r\n    border-radius: 20px !important;\r\n    width: 20px;\r\n    height: 20px;\r\n    text-align: center;\r\n    line-height: 18px;\r\n  }\r\n</style>"]}]}