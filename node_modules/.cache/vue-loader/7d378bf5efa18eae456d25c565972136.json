{"remainingRequest":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\componentes\\VisaoZonasItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\componentes\\VisaoZonasItem.vue","mtime":1582126213756},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapState} from 'vuex'\n\nexport default {\n    name: 'VisaoZonasItem',\n    props: ['zona', 'largura', 'altura'],\n    data() {\n        return {\n            etapaRecemAlterada: false,\n            recemIniciado: false,\n        }\n    },\n    created() {\n        this.etapaRecemAlterada = false;\n    },\n    mounted() {\n        this.recemIniciado = true;\n    },\n    computed: {\n        andamento() {\n            return this.zona.andamento\n        },\n        descAndamento() {\n            if (this.andamentos[this.andamento - 1]) {\n                return this.andamentos[this.andamento - 1].descricao || ''\n            }\n            else return ''\n        },\n        esmaecimento() {\n            return this.inativa ? '0.5' : '1.0'\n        },\n        temPendencias() {\n            return (this.zona.pendencias && this.zona.pendencias.length > 0)\n        },\n        numPendencias() {\n            if (!this.zona.pendencias) return 0;\n            else return this.zona.pendencias.length\n        },\n        corTexto() {\n            return (this.naoVerificar || this.inativa) ? 'lightgray' : 'white'\n        },\n        mostrarBadgePendencias() {\n            return this.mostrarZona\n                && this.temPendencias\n                && this.destacaPendencias\n                && this.ativa\n        },\n        destacaPendencias() {\n            if (this.andamentos[this.andamento - 1]) {\n                return (this.andamentos[this.andamento - 1].destacaPendencias)\n            }\n            else return false\n        },\n        ativa() {\n            return (this.zona.situacaoVerificacao === 'ATIVA')\n        },\n        inativa() {\n            return (this.zona.situacaoVerificacao === 'INATIVA')\n        },\n        naoVerificar() {\n            return (this.zona.situacaoVerificacao === 'NV')\n        },\n        mostrarZona() {\n            return (this.poloSelecionado === this.zona.numPolo || this.poloSelecionado === 0)\n        },\n        ...mapState({\n            etapa: state => state.etapa,\n            poloSelecionado: state => state.poloSelecionado,\n            ativarNotificacoes: state => state.ativarNotificacoes\n        }),\n        ...mapGetters({\n            andamentos: 'getAndamentos',\n            cor: 'getCorZona'\n        })\n    },\n    watch: {\n        etapa() {\n            this.etapaRecemAlterada = true;\n        },\n        andamento() {\n            if (this.ativarNotificacoes && !this.etapaRecemAlterada && !this.recemIniciado) {\n                let conferente = '';\n                if (this.descAndamento === 'Conferência em andamento') {\n                    conferente = this.zona.conferente\n                }\n                this.$notify({\n                    group: 'not-zonas',\n                    title: 'Novo andamento',\n                    text: \"Zona \" + this.zona.numero\n                        + \" - \" + this.descAndamento\n                        + (!conferente ? '' : \" por  \" + conferente.split(\" \")[0])\n                });\n                this.etapaRecemAlterada = false;\n            }\n        }\n    }\n}\n",{"version":3,"sources":["VisaoZonasItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VisaoZonasItem.vue","sourceRoot":"src/componentes","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"badge-pendencias\"\r\n         v-show=\"mostrarBadgePendencias\">\r\n      {{numPendencias}}\r\n    </div>\r\n\r\n    <b-btn v-b-modal.sapemodal\r\n           :id=\"'zona' + zona.numero\"\r\n           v-show=\"mostrarZona\"\r\n           class=\"botao-zona\"\r\n           :class=\"{shadow: ativa}\"\r\n           :style=\"{'background-color': cor(zona.numero),\r\n                    opacity: esmaecimento,\r\n                    color: corTexto,\r\n                    width: largura,\r\n                    height: altura}\"\r\n           :disabled=\"naoVerificar\"\r\n           @click=\"$emit('zona-clicada', zona.numero)\">\r\n\r\n      {{zona.numero}}\r\n\r\n      <b-progress id=\"barra-progresso\" v-if=\"destacaPendencias && ativa\">\r\n        <b-progress-bar\r\n            :value=\"zona.percRealizado\"\r\n            style=\"background-color: white; z-index: 1\">\r\n        </b-progress-bar>\r\n      </b-progress>\r\n    </b-btn>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import {mapGetters, mapState} from 'vuex'\r\n\r\n    export default {\r\n        name: 'VisaoZonasItem',\r\n        props: ['zona', 'largura', 'altura'],\r\n        data() {\r\n            return {\r\n                etapaRecemAlterada: false,\r\n                recemIniciado: false,\r\n            }\r\n        },\r\n        created() {\r\n            this.etapaRecemAlterada = false;\r\n        },\r\n        mounted() {\r\n            this.recemIniciado = true;\r\n        },\r\n        computed: {\r\n            andamento() {\r\n                return this.zona.andamento\r\n            },\r\n            descAndamento() {\r\n                if (this.andamentos[this.andamento - 1]) {\r\n                    return this.andamentos[this.andamento - 1].descricao || ''\r\n                }\r\n                else return ''\r\n            },\r\n            esmaecimento() {\r\n                return this.inativa ? '0.5' : '1.0'\r\n            },\r\n            temPendencias() {\r\n                return (this.zona.pendencias && this.zona.pendencias.length > 0)\r\n            },\r\n            numPendencias() {\r\n                if (!this.zona.pendencias) return 0;\r\n                else return this.zona.pendencias.length\r\n            },\r\n            corTexto() {\r\n                return (this.naoVerificar || this.inativa) ? 'lightgray' : 'white'\r\n            },\r\n            mostrarBadgePendencias() {\r\n                return this.mostrarZona\r\n                    && this.temPendencias\r\n                    && this.destacaPendencias\r\n                    && this.ativa\r\n            },\r\n            destacaPendencias() {\r\n                if (this.andamentos[this.andamento - 1]) {\r\n                    return (this.andamentos[this.andamento - 1].destacaPendencias)\r\n                }\r\n                else return false\r\n            },\r\n            ativa() {\r\n                return (this.zona.situacaoVerificacao === 'ATIVA')\r\n            },\r\n            inativa() {\r\n                return (this.zona.situacaoVerificacao === 'INATIVA')\r\n            },\r\n            naoVerificar() {\r\n                return (this.zona.situacaoVerificacao === 'NV')\r\n            },\r\n            mostrarZona() {\r\n                return (this.poloSelecionado === this.zona.numPolo || this.poloSelecionado === 0)\r\n            },\r\n            ...mapState({\r\n                etapa: state => state.etapa,\r\n                poloSelecionado: state => state.poloSelecionado,\r\n                ativarNotificacoes: state => state.ativarNotificacoes\r\n            }),\r\n            ...mapGetters({\r\n                andamentos: 'getAndamentos',\r\n                cor: 'getCorZona'\r\n            })\r\n        },\r\n        watch: {\r\n            etapa() {\r\n                this.etapaRecemAlterada = true;\r\n            },\r\n            andamento() {\r\n                if (this.ativarNotificacoes && !this.etapaRecemAlterada && !this.recemIniciado) {\r\n                    let conferente = '';\r\n                    if (this.descAndamento === 'Conferência em andamento') {\r\n                        conferente = this.zona.conferente\r\n                    }\r\n                    this.$notify({\r\n                        group: 'not-zonas',\r\n                        title: 'Novo andamento',\r\n                        text: \"Zona \" + this.zona.numero\r\n                            + \" - \" + this.descAndamento\r\n                            + (!conferente ? '' : \" por  \" + conferente.split(\" \")[0])\r\n                    });\r\n                    this.etapaRecemAlterada = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  $fundo-pendencia: #DE3F00;\r\n  $texto-pendencia: white;\r\n  $fundo-progresso: darkgray;\r\n\r\n  .botao-zona {\r\n    font-family: \"Roboto Condensed\", sans-serif;\r\n    border-radius: 7px;\r\n    border-width: 0;\r\n    margin-bottom: calc(2px + 0.7vmin);\r\n    margin-right: calc(2px + 0.7vmin);\r\n    height: 7.4vmin;\r\n    width: 6.45vmax;\r\n    min-width: 60px;\r\n    min-height: 40px;\r\n    font-size: calc(5px + 2.5vmin);\r\n    z-index: 1\r\n  }\r\n\r\n  .botao-zona:hover {\r\n    filter: brightness(1.3);\r\n  }\r\n\r\n  #barra-progresso {\r\n    height: 4px;\r\n    background-color: $fundo-progresso;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  .badge-pendencias {\r\n    font-family: \"Roboto Condensed\", sans-serif;\r\n    font-size: calc(5px + 1.5vmin);\r\n    background-color: $fundo-pendencia;\r\n    color: $texto-pendencia;\r\n    float: right;\r\n    position: relative;\r\n    margin-right: calc(5px + 0.7vmax);\r\n    margin-left: calc(2px - 5vmax);\r\n    width: calc(5px + 1vmax);\r\n    text-align: center;\r\n    border-bottom-left-radius: 7px;\r\n    border-bottom-right-radius: 7px;\r\n    z-index: 2;\r\n  }\r\n</style>"]}]}