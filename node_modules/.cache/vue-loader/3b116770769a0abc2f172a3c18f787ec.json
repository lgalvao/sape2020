{"remainingRequest":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoConfiguracao.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoConfiguracao.vue","mtime":1582126975463},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIHRpcG9zIGZyb20gJy4uL3N0b3JlL211dGF0aW9udHlwZXMnCmltcG9ydCBOYXZlZ2FjYW8gZnJvbSAnLi4vY29tcG9uZW50ZXMvTmF2ZWdhY2FvJwppbXBvcnQge21hcE11dGF0aW9ucywgbWFwU3RhdGUsIG1hcEFjdGlvbnN9IGZyb20gJ3Z1ZXgnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiVmlzYW9Db25maWd1cmFjYW8iLAogICAgY29tcG9uZW50czogewogICAgICAgIE5hdmVnYWNhbwogICAgfSwKICAgIGJlZm9yZVJvdXRlRW50ZXIodG8sIGZyb20sIG5leHQpIHsKICAgICAgICBuZXh0KHZtID0+IHsKICAgICAgICAgICAgdm0uYXR1YWxpemFyVmlzYW8odG8ubmFtZSk7CiAgICAgICAgICAgIHZtLmF0dWFsaXphclBvbGxpbmcoKTsKICAgICAgICB9KQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgdXJsOiB7CiAgICAgICAgICAgIGdldCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl91cmwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2V0KHZhbG9yKSB7CiAgICAgICAgICAgICAgICB0aGlzLmF0dWFsaXphclVybCh2YWxvcikKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgYXRpdmFyTm90aWZpY2Fjb2VzOiB7CiAgICAgICAgICAgIGdldCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9hdGl2YXJOb3RpZmljYWNvZXMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2V0KHZhbG9yKSB7CiAgICAgICAgICAgICAgICB0aGlzLmF0dWFsaXphckF0aXZhck5vdGlmaWNhY29lcyh2YWxvcikKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgYWx0ZXJuYXJFdGFwYXM6IHsKICAgICAgICAgICAgZ2V0KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FsdGVybmFyRXRhcGFzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNldCh2YWxvcikgewogICAgICAgICAgICAgICAgaWYgKHZhbG9yID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5hdHVhbGl6YXJNb2RvVGVsYW8oZmFsc2UpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLmF0dWFsaXphckFsdGVybmFyRXRhcGFzKHZhbG9yKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtb2RvVGVsYW86IHsKICAgICAgICAgICAgZ2V0KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21vZG9UZWxhbwogICAgICAgICAgICB9LAogICAgICAgICAgICBzZXQodmFsb3IpIHsKICAgICAgICAgICAgICAgIGlmICh2YWxvciA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuYXR1YWxpemFyQWx0ZXJuYXJFdGFwYXMoZmFsc2UpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLmF0dWFsaXphck1vZG9UZWxhbyh2YWxvcikKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdGVzdGVBbmRhbWVudG9zOiB7CiAgICAgICAgICAgIGdldCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl90ZXN0ZUFuZGFtZW50b3MKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2V0KHZhbG9yKSB7CiAgICAgICAgICAgICAgICB0aGlzLmF0dWFsaXphclRlc3RlQW5kYW1lbnRvcyh2YWxvcik7CiAgICAgICAgICAgICAgICB0aGlzLmF0dWFsaXphclBvbGxpbmcoKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAuLi5tYXBTdGF0ZSh7CiAgICAgICAgICAgIF91cmw6IHN0YXRlID0+IHN0YXRlLnVybCwKICAgICAgICAgICAgX2F0aXZhck5vdGlmaWNhY29lczogc3RhdGUgPT4gc3RhdGUuYXRpdmFyTm90aWZpY2Fjb2VzLAogICAgICAgICAgICBfYWx0ZXJuYXJFdGFwYXM6IHN0YXRlID0+IHN0YXRlLmFsdGVybmFyRXRhcGFzLAogICAgICAgICAgICBfbW9kb1RlbGFvOiBzdGF0ZSA9PiBzdGF0ZS5tb2RvVGVsYW8sCiAgICAgICAgICAgIF90ZXN0ZUFuZGFtZW50b3M6IHN0YXRlID0+IHN0YXRlLnRlc3RlQW5kYW1lbnRvcwogICAgICAgIH0pCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoWwogICAgICAgICAgICAnYXR1YWxpemFyUG9sbGluZycKICAgICAgICBdKSwKICAgICAgICAuLi5tYXBNdXRhdGlvbnMoewogICAgICAgICAgICAgICAgYXR1YWxpemFyVmlzYW86IHRpcG9zLkFUVUFMSVpBUl9WSVNBTywKICAgICAgICAgICAgICAgIGF0dWFsaXphck1vZG9UZWxhbzogdGlwb3MuQVRVQUxJWkFSX01PRE9fVEVMQU8sCiAgICAgICAgICAgICAgICBhdHVhbGl6YXJBbHRlcm5hckV0YXBhczogdGlwb3MuQVRVQUxJWkFSX0FMVEVSTkFSX0VUQVBBUywKICAgICAgICAgICAgICAgIGF0dWFsaXphckF0aXZhck5vdGlmaWNhY29lczogdGlwb3MuQVRJVkFSX05PVElGSUNBQ09FUywKICAgICAgICAgICAgICAgIGF0dWFsaXphclVybDogdGlwb3MuQVRVQUxJWkFSX1VSTCwKICAgICAgICAgICAgICAgIGF0dWFsaXphclRlc3RlQW5kYW1lbnRvczogdGlwb3MuQVRVQUxJWkFSX1RFU1RFX0FOREFNRU5UT1MKICAgICAgICAgICAgfQogICAgICAgICkKICAgIH0KfQo="},{"version":3,"sources":["VisaoConfiguracao.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VisaoConfiguracao.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <b-container fluid=\"true\">\r\n        <b-row align-v=\"start\">\r\n            <navegacao titulo-geral=\"Configurações\"/>\r\n        </b-row>\r\n\r\n        <b-row style=\"font-size: large\">\r\n            <b-col\r\n                    cols=\"12\"\r\n                    md=\"7\">\r\n                <b-form>\r\n                    <b-list-group>\r\n                        <b-list-group-item>\r\n                            <b-form-checkbox\r\n                                    id=\"cbTelao\"\r\n                                    v-model=\"modoTelao\">\r\n                                Modo telão\r\n                            </b-form-checkbox>\r\n                        </b-list-group-item>\r\n\r\n                        <b-list-group-item>\r\n                            <b-form-checkbox\r\n                                    id=\"cbAlternar\"\r\n                                    v-model=\"alternarEtapas\">\r\n                                Alternar geração/preparação\r\n                            </b-form-checkbox>\r\n                        </b-list-group-item>\r\n\r\n                        <b-list-group-item>\r\n                            <b-form-checkbox\r\n                                    id=\"cbNotificacao\"\r\n                                    v-model=\"ativarNotificacoes\">\r\n                                Ativar notificações (beta!)\r\n                            </b-form-checkbox>\r\n                        </b-list-group-item>\r\n\r\n                        <b-list-group-item>\r\n                            <b-form-checkbox\r\n                                    id=\"cbTesteAndamentos\"\r\n                                    v-model=\"testeAndamentos\">\r\n                                Teste de andamentos (usado pela equipe de dev)\r\n                            </b-form-checkbox>\r\n                        </b-list-group-item>\r\n\r\n                        <b-list-group-item>\r\n                            URL do servidor (usado pela equipe de dev):\r\n                            <b-form-input\r\n                                    id=\"urlServidor\"\r\n                                    v-model=\"url\"\r\n                                    placeholder=\"Endereço do servidor\"\r\n                                    style=\"width:50%\">\r\n                            </b-form-input>\r\n                        </b-list-group-item>\r\n\r\n                    </b-list-group>\r\n                </b-form>\r\n            </b-col>\r\n\r\n        </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from '../store/mutationtypes'\r\n    import Navegacao from '../componentes/Navegacao'\r\n    import {mapMutations, mapState, mapActions} from 'vuex'\r\n\r\n    export default {\r\n        name: \"VisaoConfiguracao\",\r\n        components: {\r\n            Navegacao\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name);\r\n                vm.atualizarPolling();\r\n            })\r\n        },\r\n        computed: {\r\n            url: {\r\n                get() {\r\n                    return this._url\r\n                },\r\n                set(valor) {\r\n                    this.atualizarUrl(valor)\r\n                }\r\n            },\r\n            ativarNotificacoes: {\r\n                get() {\r\n                    return this._ativarNotificacoes\r\n                },\r\n                set(valor) {\r\n                    this.atualizarAtivarNotificacoes(valor)\r\n                }\r\n            },\r\n            alternarEtapas: {\r\n                get() {\r\n                    return this._alternarEtapas\r\n                },\r\n                set(valor) {\r\n                    if (valor === true) {\r\n                        this.atualizarModoTelao(false)\r\n                    }\r\n                    this.atualizarAlternarEtapas(valor)\r\n                }\r\n            },\r\n            modoTelao: {\r\n                get() {\r\n                    return this._modoTelao\r\n                },\r\n                set(valor) {\r\n                    if (valor === true) {\r\n                        this.atualizarAlternarEtapas(false)\r\n                    }\r\n                    this.atualizarModoTelao(valor)\r\n                }\r\n            },\r\n            testeAndamentos: {\r\n                get() {\r\n                    return this._testeAndamentos\r\n                },\r\n                set(valor) {\r\n                    this.atualizarTesteAndamentos(valor);\r\n                    this.atualizarPolling()\r\n                }\r\n            },\r\n            ...mapState({\r\n                _url: state => state.url,\r\n                _ativarNotificacoes: state => state.ativarNotificacoes,\r\n                _alternarEtapas: state => state.alternarEtapas,\r\n                _modoTelao: state => state.modoTelao,\r\n                _testeAndamentos: state => state.testeAndamentos\r\n            })\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                    atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                    atualizarModoTelao: tipos.ATUALIZAR_MODO_TELAO,\r\n                    atualizarAlternarEtapas: tipos.ATUALIZAR_ALTERNAR_ETAPAS,\r\n                    atualizarAtivarNotificacoes: tipos.ATIVAR_NOTIFICACOES,\r\n                    atualizarUrl: tipos.ATUALIZAR_URL,\r\n                    atualizarTesteAndamentos: tipos.ATUALIZAR_TESTE_ANDAMENTOS\r\n                }\r\n            )\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}