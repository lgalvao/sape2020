{"remainingRequest":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sape2020\\src\\views\\VisaoPolos.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\sape2020\\src\\views\\VisaoPolos.vue","mtime":1540486594800},{"path":"D:\\sape2020\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sape2020\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojbWFwYS1wb2xvcyB7CiAgaGVpZ2h0OiA4OHZoOwogIHotaW5kZXg6IDE7Cn0KCi5lc3RpbG8tdG9vbHRpcC1wb2xvIHsKICBiYWNrZ3JvdW5kOiByZWQgIWltcG9ydGFudDsKICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDsKICBib3JkZXI6IDAgIWltcG9ydGFudDsKICBmb250LXNpemU6IDE1cHg7CiAgYm9yZGVyLXJhZGl1czogMjBweCAhaW1wb3J0YW50OwogIHdpZHRoOiAzMHB4OwogIGhlaWdodDogMzBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbGluZS1oZWlnaHQ6IDE4cHg7CiAgZm9udC1mYW1pbHk6ICJSb2JvdG8gQ29uZGVuc2VkIEJvbGQiLCBzYW5zLXNlcmlmOwp9CgouZXN0aWxvLXBvcHVwLXBvbG8gLmxlYWZsZXQtcG9wdXAtdGlwIHsKICB3aWR0aDogMDsKICBoZWlnaHQ6IDA7Cn0KCi5lc3RpbG8tcG9wdXAtcG9sbyAubGVhZmxldC1wb3B1cC1jb250ZW50LXdyYXBwZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBiYWNrZ3JvdW5kOiAjMzQzYTQwOwogIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7CiAgYm9yZGVyLXJhZGl1czogMDsKICBmb250LWZhbWlseTogIlJvYm90byBjb25kZW5zZWQiLCBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTZweDsKICBib3gtc2hhZG93OiBub25lOwp9CgoubGVhZmxldC10b29sdGlwLWxlZnQuZXN0aWxvLXRvb2x0aXAtcG9sbzo6YmVmb3JlIHsKICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQoKLmxlYWZsZXQtdG9vbHRpcC1yaWdodC5lc3RpbG8tdG9vbHRpcDo6YmVmb3JlIHsKICBib3JkZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCg=="},{"version":3,"sources":["VisaoPolos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0NA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"VisaoPolos.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row align-v=\"start\">\r\n      <navegacao/>\r\n    </b-row>\r\n\r\n    <b-row align-v=\"center\" id=\"mapa-polos\"></b-row>\r\n\r\n    <b-row align-v=\"end\">\r\n      <legenda/>\r\n    </b-row>\r\n\r\n    <visao-polos-modal\r\n        :polo=polos[poloSelecionado]>\r\n    </visao-polos-modal>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n    import * as tipos from \"../store/mutationtypes\"\r\n    import {mapActions, mapGetters, mapMutations, mapState} from 'vuex'\r\n\r\n    import L from 'leaflet'\r\n    import Navegacao from '../componentes/Navegacao';\r\n    import Legenda from '../componentes/Legenda';\r\n\r\n    import mapa from '../assets/geo/mapapolos.js'\r\n    import mapanordeste from '../assets/geo/nordeste.js'\r\n    import VisaoPolosModal from '../componentes/VisaoPolosModal';\r\n\r\n    export default {\r\n        name: 'VisaoPolos',\r\n        components: {\r\n            VisaoPolosModal,\r\n            Legenda,\r\n            Navegacao\r\n        },\r\n        data() {\r\n            return {\r\n                poloSelecionado: \"1\",\r\n                mapa: null,\r\n                camadaGeo: null,\r\n                camadaFundo: null,\r\n                camadaFundo2: null,\r\n                info: null\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState({\r\n                zonas: state => state.zonas,\r\n                polos: state => state.polos,\r\n                etapa: state => state.etapa\r\n            }),\r\n            ...mapGetters({\r\n                andamentos: 'getAndamentos',\r\n                obterCor: 'getCorPolo',\r\n                descAndamento: 'getDescAndamento',\r\n                andamentosEtapaPendencias: 'getAndamentosPendenciasPolos'\r\n            })\r\n        },\r\n        watch: {\r\n            andamentosEtapaPendencias() {\r\n                this.atualizarMapa()\r\n            }\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next(vm => {\r\n                vm.atualizarVisao(to.name)\r\n                vm.atualizarPolling()\r\n                vm.atualizarMapa()\r\n            })\r\n        },\r\n        mounted() {\r\n            const opcoesMapa = {\r\n                zoomControl: false,\r\n                attributionControl: false,\r\n                dragging: false,\r\n                zoomSnap: 0.1,\r\n                zoomDelta: 0.1,\r\n            };\r\n\r\n            if (this.mapa === null || this.mapa === undefined) {\r\n                this.mapa = L.map('mapa-polos', opcoesMapa)\r\n            }\r\n\r\n            if (this.camadaFundo == null) {\r\n                this.camadaFundo = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\r\n                    id: 'mapbox.light',\r\n                    accessToken: 'pk.eyJ1IjoibGVvbmFyZG9nYWx2YW8iLCJhIjoiY2psdjFkYmdiMHEydTNvbzY0c3RpcWVidyJ9.T-CQYKxMiHiPws79nAjETg'\r\n                }).addTo(this.mapa);\r\n            }\r\n\r\n            if (this.camadaFundo2 == null) {\r\n                this.camadaFundo2 = L.geoJSON(mapanordeste, {\r\n                    style: {fillColor: 'white', color: 'white', weight: 1}\r\n                }).addTo(this.mapa);\r\n            }\r\n\r\n            if (this.camadaGeo == null) {\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa);\r\n            }\r\n\r\n            const bounds = this.camadaGeo.getBounds();\r\n            const zoom = this.mapa.getBoundsZoom(bounds);\r\n            this.mapa.setZoom(zoom);\r\n            this.mapa.setMinZoom(zoom);\r\n            this.mapa.setMaxZoom(zoom);\r\n            this.mapa.fitBounds(bounds);\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'atualizarPolling'\r\n            ]),\r\n            ...mapMutations({\r\n                atualizarVisao: tipos.ATUALIZAR_VISAO,\r\n                mostrarModal: tipos.MOSTRAR_MODAL_POLO\r\n            }),\r\n            atualizarMapa() {\r\n                this.camadaGeo.remove()\r\n\r\n                this.camadaGeo = L.geoJSON(mapa, {\r\n                    style: this.estilo,\r\n                    onEachFeature: this.atualizarElementos\r\n                }).addTo(this.mapa);\r\n\r\n                console.log(\"Mapa atualizado\")\r\n            },\r\n            mostrarDetalhes(e) {\r\n                this.poloSelecionado = e.target.feature.properties.id;\r\n                this.mostrarModal(true)\r\n            },\r\n            estilo(feature) {\r\n                return {\r\n                    fillColor: this.obterCor(feature.properties.id),\r\n                    weight: 3,\r\n                    opacity: 1,\r\n                    color: 'white',\r\n                    fillOpacity: 1\r\n                }\r\n            },\r\n            destacar(e) {\r\n                const layer = e.target;\r\n                const id = layer.feature.properties.id;\r\n                layer.setStyle({\r\n                    weight: 7,\r\n                    fillOpacity: 1,\r\n                });\r\n                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n                    layer.bringToFront();\r\n                }\r\n\r\n                this.info = L.popup({\r\n                    autoPan: false,\r\n                    closeButton: false,\r\n                    autoClose: true,\r\n                    className: 'estilo-popup-polo'\r\n                }).setLatLng([-7.1, -37.8]).openOn(this.mapa);\r\n\r\n                this.atualizarInfo(id + \" - \" + this.polos[id].municipioSede)\r\n            },\r\n            cancelarDestaque(e) {\r\n                this.camadaGeo.resetStyle(e.target);\r\n                if (this.info) this.info.remove()\r\n            },\r\n            atualizarInfo(conteudo) {\r\n                this.info.setContent(conteudo)\r\n            },\r\n            atualizarElementos(feature, layer) {\r\n                layer.on({\r\n                    mouseover: this.destacar,\r\n                    mouseout: this.cancelarDestaque,\r\n                    click: this.mostrarDetalhes\r\n                });\r\n                const numPolo = feature.properties.id;\r\n                const polo = this.polos[numPolo];\r\n                const numPendencias = polo.pendencias.length;\r\n                const indiceAndamento = polo.andamento - 1;\r\n\r\n                let ajuste = [0, 0];\r\n                switch (numPolo) {\r\n                    case 1:\r\n                        ajuste = [-8, 4];\r\n                        break;\r\n                    case 3:\r\n                        ajuste = [-10, 0];\r\n                        break;\r\n                    case 5:\r\n                        ajuste = [-10, -7];\r\n                        break;\r\n                    case 6:\r\n                        ajuste = [-35, 5];\r\n                        break;\r\n                    case 15:\r\n                        ajuste = [-10, -8];\r\n                        break;\r\n                    case 16:\r\n                        ajuste = [-17, -19];\r\n                        break;\r\n                }\r\n                if (this.andamentos[indiceAndamento].destacaPendencias && numPendencias > 0) {\r\n                    layer.bindTooltip(numPendencias.toString(), {\r\n                            permanent: true,\r\n                            direction: 'center',\r\n                            opacity: 1.0,\r\n                            className: 'estilo-tooltip-polo',\r\n                            offset: ajuste\r\n                        }\r\n                    );\r\n                } else layer.unbindTooltip()\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n  #mapa-polos {\r\n    height: 88vh;\r\n    z-index: 1;\r\n  }\r\n\r\n  .estilo-tooltip-polo {\r\n    background: red !important;\r\n    color: white !important;\r\n    border: 0 !important;\r\n    font-size: 15px;\r\n    border-radius: 20px !important;\r\n    width: 30px;\r\n    height: 30px;\r\n    text-align: center;\r\n    line-height: 18px;\r\n    font-family: \"Roboto Condensed Bold\", sans-serif;\r\n  }\r\n\r\n  .estilo-popup-polo .leaflet-popup-tip {\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  .estilo-popup-polo .leaflet-popup-content-wrapper {\r\n    position: relative;\r\n    background: #343a40;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    border-radius: 0;\r\n    font-family: \"Roboto condensed\", sans-serif;\r\n    font-size: 16px;\r\n    box-shadow: none;\r\n  }\r\n\r\n  .leaflet-tooltip-left.estilo-tooltip-polo::before {\r\n    border-left-color: transparent !important;\r\n  }\r\n\r\n  .leaflet-tooltip-right.estilo-tooltip::before {\r\n    border-right-color: transparent !important;\r\n  }\r\n\r\n</style>\r\n\r\n"]}]}